
Hall_effect.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000005c  00800100  00000b42  00000bd6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b42  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000ca  0080015c  0080015c  00000c32  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c32  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c90  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  00000cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001071  00000000  00000000  00000d80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000968  00000000  00000000  00001df1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000771  00000000  00000000  00002759  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001ac  00000000  00000000  00002ecc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000507  00000000  00000000  00003078  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000073f  00000000  00000000  0000357f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00003cbe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e4       	ldi	r30, 0x42	; 66
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 35       	cpi	r26, 0x5C	; 92
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	ac e5       	ldi	r26, 0x5C	; 92
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 32       	cpi	r26, 0x26	; 38
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 c4 01 	call	0x388	; 0x388 <main>
  9e:	0c 94 9f 05 	jmp	0xb3e	; 0xb3e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <Initialization>:
	{
		sprintf(r,"\t %x \n\r ",rows[i]);
		UART_putstring(r);
	}
	
}
  a6:	84 b1       	in	r24, 0x04	; 4
  a8:	81 60       	ori	r24, 0x01	; 1
  aa:	84 b9       	out	0x04, r24	; 4
  ac:	8a b1       	in	r24, 0x0a	; 10
  ae:	80 68       	ori	r24, 0x80	; 128
  b0:	8a b9       	out	0x0a, r24	; 10
  b2:	84 b1       	in	r24, 0x04	; 4
  b4:	84 60       	ori	r24, 0x04	; 4
  b6:	84 b9       	out	0x04, r24	; 4
  b8:	84 b1       	in	r24, 0x04	; 4
  ba:	8d 7f       	andi	r24, 0xFD	; 253
  bc:	84 b9       	out	0x04, r24	; 4
  be:	08 95       	ret

000000c0 <rowsupdate>:
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	0d c0       	rjmp	.+26     	; 0xe0 <rowsupdate+0x20>
  c6:	fc 01       	movw	r30, r24
  c8:	ee 59       	subi	r30, 0x9E	; 158
  ca:	fe 4f       	sbci	r31, 0xFE	; 254
  cc:	20 81       	ld	r18, Z
  ce:	fc 01       	movw	r30, r24
  d0:	ee 0f       	add	r30, r30
  d2:	ff 1f       	adc	r31, r31
  d4:	ea 59       	subi	r30, 0x9A	; 154
  d6:	fe 4f       	sbci	r31, 0xFE	; 254
  d8:	30 e0       	ldi	r19, 0x00	; 0
  da:	31 83       	std	Z+1, r19	; 0x01
  dc:	20 83       	st	Z, r18
  de:	01 96       	adiw	r24, 0x01	; 1
  e0:	84 30       	cpi	r24, 0x04	; 4
  e2:	91 05       	cpc	r25, r1
  e4:	84 f3       	brlt	.-32     	; 0xc6 <rowsupdate+0x6>
  e6:	08 95       	ret

000000e8 <boardupdate>:
  e8:	60 e0       	ldi	r22, 0x00	; 0
  ea:	70 e0       	ldi	r23, 0x00	; 0
  ec:	1f c0       	rjmp	.+62     	; 0x12c <boardupdate+0x44>
  ee:	cb 01       	movw	r24, r22
  f0:	88 0f       	add	r24, r24
  f2:	99 1f       	adc	r25, r25
  f4:	88 0f       	add	r24, r24
  f6:	99 1f       	adc	r25, r25
  f8:	88 0f       	add	r24, r24
  fa:	99 1f       	adc	r25, r25
  fc:	82 0f       	add	r24, r18
  fe:	93 1f       	adc	r25, r19
 100:	88 0f       	add	r24, r24
 102:	99 1f       	adc	r25, r25
 104:	fc 01       	movw	r30, r24
 106:	e0 50       	subi	r30, 0x00	; 0
 108:	ff 4f       	sbci	r31, 0xFF	; 255
 10a:	40 81       	ld	r20, Z
 10c:	51 81       	ldd	r21, Z+1	; 0x01
 10e:	fc 01       	movw	r30, r24
 110:	e9 57       	subi	r30, 0x79	; 121
 112:	fe 4f       	sbci	r31, 0xFE	; 254
 114:	51 83       	std	Z+1, r21	; 0x01
 116:	40 83       	st	Z, r20
 118:	2f 5f       	subi	r18, 0xFF	; 255
 11a:	3f 4f       	sbci	r19, 0xFF	; 255
 11c:	02 c0       	rjmp	.+4      	; 0x122 <boardupdate+0x3a>
 11e:	20 e0       	ldi	r18, 0x00	; 0
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	28 30       	cpi	r18, 0x08	; 8
 124:	31 05       	cpc	r19, r1
 126:	1c f3       	brlt	.-58     	; 0xee <boardupdate+0x6>
 128:	6f 5f       	subi	r22, 0xFF	; 255
 12a:	7f 4f       	sbci	r23, 0xFF	; 255
 12c:	64 30       	cpi	r22, 0x04	; 4
 12e:	71 05       	cpc	r23, r1
 130:	b4 f3       	brlt	.-20     	; 0x11e <boardupdate+0x36>
 132:	08 95       	ret

00000134 <squareprev>:
 134:	0f 93       	push	r16
 136:	1f 93       	push	r17
 138:	cf 93       	push	r28
 13a:	df 93       	push	r29
 13c:	00 e0       	ldi	r16, 0x00	; 0
 13e:	10 e0       	ldi	r17, 0x00	; 0
 140:	56 c0       	rjmp	.+172    	; 0x1ee <squareprev+0xba>
 142:	f8 01       	movw	r30, r16
 144:	ee 59       	subi	r30, 0x9E	; 158
 146:	fe 4f       	sbci	r31, 0xFE	; 254
 148:	80 81       	ld	r24, Z
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	9c 01       	movw	r18, r24
 14e:	0c 2e       	mov	r0, r28
 150:	02 c0       	rjmp	.+4      	; 0x156 <squareprev+0x22>
 152:	35 95       	asr	r19
 154:	27 95       	ror	r18
 156:	0a 94       	dec	r0
 158:	e2 f7       	brpl	.-8      	; 0x152 <squareprev+0x1e>
 15a:	20 ff       	sbrs	r18, 0
 15c:	3e c0       	rjmp	.+124    	; 0x1da <squareprev+0xa6>
 15e:	f8 01       	movw	r30, r16
 160:	ee 0f       	add	r30, r30
 162:	ff 1f       	adc	r31, r31
 164:	ee 0f       	add	r30, r30
 166:	ff 1f       	adc	r31, r31
 168:	ee 0f       	add	r30, r30
 16a:	ff 1f       	adc	r31, r31
 16c:	ec 0f       	add	r30, r28
 16e:	fd 1f       	adc	r31, r29
 170:	ee 0f       	add	r30, r30
 172:	ff 1f       	adc	r31, r31
 174:	e0 50       	subi	r30, 0x00	; 0
 176:	ff 4f       	sbci	r31, 0xFF	; 255
 178:	40 81       	ld	r20, Z
 17a:	51 81       	ldd	r21, Z+1	; 0x01
 17c:	f8 01       	movw	r30, r16
 17e:	ee 0f       	add	r30, r30
 180:	ff 1f       	adc	r31, r31
 182:	ea 59       	subi	r30, 0x9A	; 154
 184:	fe 4f       	sbci	r31, 0xFE	; 254
 186:	20 81       	ld	r18, Z
 188:	31 81       	ldd	r19, Z+1	; 0x01
 18a:	82 17       	cp	r24, r18
 18c:	93 07       	cpc	r25, r19
 18e:	29 f1       	breq	.+74     	; 0x1da <squareprev+0xa6>
 190:	45 2b       	or	r20, r21
 192:	19 f1       	breq	.+70     	; 0x1da <squareprev+0xa6>
 194:	f8 01       	movw	r30, r16
 196:	ee 0f       	add	r30, r30
 198:	ff 1f       	adc	r31, r31
 19a:	ee 0f       	add	r30, r30
 19c:	ff 1f       	adc	r31, r31
 19e:	ee 0f       	add	r30, r30
 1a0:	ff 1f       	adc	r31, r31
 1a2:	ec 0f       	add	r30, r28
 1a4:	fd 1f       	adc	r31, r29
 1a6:	ee 0f       	add	r30, r30
 1a8:	ff 1f       	adc	r31, r31
 1aa:	e0 50       	subi	r30, 0x00	; 0
 1ac:	ff 4f       	sbci	r31, 0xFF	; 255
 1ae:	80 81       	ld	r24, Z
 1b0:	91 81       	ldd	r25, Z+1	; 0x01
 1b2:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <temp+0x1>
 1b6:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <temp>
 1ba:	11 82       	std	Z+1, r1	; 0x01
 1bc:	10 82       	st	Z, r1
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <print+0x1>
 1c6:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <print>
 1ca:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <__data_end+0x1>
 1ce:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <__data_end>
 1d2:	0e 94 60 00 	call	0xc0	; 0xc0 <rowsupdate>
 1d6:	0e 94 74 00 	call	0xe8	; 0xe8 <boardupdate>
 1da:	21 96       	adiw	r28, 0x01	; 1
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <squareprev+0xae>
 1de:	c0 e0       	ldi	r28, 0x00	; 0
 1e0:	d0 e0       	ldi	r29, 0x00	; 0
 1e2:	c8 30       	cpi	r28, 0x08	; 8
 1e4:	d1 05       	cpc	r29, r1
 1e6:	0c f4       	brge	.+2      	; 0x1ea <squareprev+0xb6>
 1e8:	ac cf       	rjmp	.-168    	; 0x142 <squareprev+0xe>
 1ea:	0f 5f       	subi	r16, 0xFF	; 255
 1ec:	1f 4f       	sbci	r17, 0xFF	; 255
 1ee:	04 30       	cpi	r16, 0x04	; 4
 1f0:	11 05       	cpc	r17, r1
 1f2:	ac f3       	brlt	.-22     	; 0x1de <squareprev+0xaa>
 1f4:	df 91       	pop	r29
 1f6:	cf 91       	pop	r28
 1f8:	1f 91       	pop	r17
 1fa:	0f 91       	pop	r16
 1fc:	08 95       	ret

000001fe <squarenext>:
 1fe:	0f 93       	push	r16
 200:	1f 93       	push	r17
 202:	cf 93       	push	r28
 204:	df 93       	push	r29
 206:	00 e0       	ldi	r16, 0x00	; 0
 208:	10 e0       	ldi	r17, 0x00	; 0
 20a:	58 c0       	rjmp	.+176    	; 0x2bc <squarenext+0xbe>
 20c:	f8 01       	movw	r30, r16
 20e:	ee 59       	subi	r30, 0x9E	; 158
 210:	fe 4f       	sbci	r31, 0xFE	; 254
 212:	80 81       	ld	r24, Z
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	9c 01       	movw	r18, r24
 218:	0c 2e       	mov	r0, r28
 21a:	02 c0       	rjmp	.+4      	; 0x220 <squarenext+0x22>
 21c:	35 95       	asr	r19
 21e:	27 95       	ror	r18
 220:	0a 94       	dec	r0
 222:	e2 f7       	brpl	.-8      	; 0x21c <squarenext+0x1e>
 224:	20 fd       	sbrc	r18, 0
 226:	40 c0       	rjmp	.+128    	; 0x2a8 <squarenext+0xaa>
 228:	f8 01       	movw	r30, r16
 22a:	ee 0f       	add	r30, r30
 22c:	ff 1f       	adc	r31, r31
 22e:	ee 0f       	add	r30, r30
 230:	ff 1f       	adc	r31, r31
 232:	ee 0f       	add	r30, r30
 234:	ff 1f       	adc	r31, r31
 236:	ec 0f       	add	r30, r28
 238:	fd 1f       	adc	r31, r29
 23a:	ee 0f       	add	r30, r30
 23c:	ff 1f       	adc	r31, r31
 23e:	e9 57       	subi	r30, 0x79	; 121
 240:	fe 4f       	sbci	r31, 0xFE	; 254
 242:	40 81       	ld	r20, Z
 244:	51 81       	ldd	r21, Z+1	; 0x01
 246:	f8 01       	movw	r30, r16
 248:	ee 0f       	add	r30, r30
 24a:	ff 1f       	adc	r31, r31
 24c:	ea 59       	subi	r30, 0x9A	; 154
 24e:	fe 4f       	sbci	r31, 0xFE	; 254
 250:	20 81       	ld	r18, Z
 252:	31 81       	ldd	r19, Z+1	; 0x01
 254:	82 17       	cp	r24, r18
 256:	93 07       	cpc	r25, r19
 258:	39 f1       	breq	.+78     	; 0x2a8 <squarenext+0xaa>
 25a:	45 2b       	or	r20, r21
 25c:	29 f5       	brne	.+74     	; 0x2a8 <squarenext+0xaa>
 25e:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <temp>
 262:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <temp+0x1>
 266:	f8 01       	movw	r30, r16
 268:	ee 0f       	add	r30, r30
 26a:	ff 1f       	adc	r31, r31
 26c:	ee 0f       	add	r30, r30
 26e:	ff 1f       	adc	r31, r31
 270:	ee 0f       	add	r30, r30
 272:	ff 1f       	adc	r31, r31
 274:	ec 0f       	add	r30, r28
 276:	fd 1f       	adc	r31, r29
 278:	ee 0f       	add	r30, r30
 27a:	ff 1f       	adc	r31, r31
 27c:	e0 50       	subi	r30, 0x00	; 0
 27e:	ff 4f       	sbci	r31, 0xFF	; 255
 280:	91 83       	std	Z+1, r25	; 0x01
 282:	80 83       	st	Z, r24
 284:	81 e0       	ldi	r24, 0x01	; 1
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <print+0x1>
 28c:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <print>
 290:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <__data_end+0x1>
 294:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <__data_end>
 298:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <temp+0x1>
 29c:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <temp>
 2a0:	0e 94 60 00 	call	0xc0	; 0xc0 <rowsupdate>
 2a4:	0e 94 74 00 	call	0xe8	; 0xe8 <boardupdate>
 2a8:	21 96       	adiw	r28, 0x01	; 1
 2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <squarenext+0xb2>
 2ac:	c0 e0       	ldi	r28, 0x00	; 0
 2ae:	d0 e0       	ldi	r29, 0x00	; 0
 2b0:	c8 30       	cpi	r28, 0x08	; 8
 2b2:	d1 05       	cpc	r29, r1
 2b4:	0c f4       	brge	.+2      	; 0x2b8 <squarenext+0xba>
 2b6:	aa cf       	rjmp	.-172    	; 0x20c <squarenext+0xe>
 2b8:	0f 5f       	subi	r16, 0xFF	; 255
 2ba:	1f 4f       	sbci	r17, 0xFF	; 255
 2bc:	04 30       	cpi	r16, 0x04	; 4
 2be:	11 05       	cpc	r17, r1
 2c0:	ac f3       	brlt	.-22     	; 0x2ac <squarenext+0xae>
 2c2:	df 91       	pop	r29
 2c4:	cf 91       	pop	r28
 2c6:	1f 91       	pop	r17
 2c8:	0f 91       	pop	r16
 2ca:	08 95       	ret

000002cc <printboard>:
 2cc:	cf 92       	push	r12
 2ce:	df 92       	push	r13
 2d0:	ef 92       	push	r14
 2d2:	ff 92       	push	r15
 2d4:	0f 93       	push	r16
 2d6:	1f 93       	push	r17
 2d8:	cf 93       	push	r28
 2da:	df 93       	push	r29
 2dc:	cd b7       	in	r28, 0x3d	; 61
 2de:	de b7       	in	r29, 0x3e	; 62
 2e0:	69 97       	sbiw	r28, 0x19	; 25
 2e2:	0f b6       	in	r0, 0x3f	; 63
 2e4:	f8 94       	cli
 2e6:	de bf       	out	0x3e, r29	; 62
 2e8:	0f be       	out	0x3f, r0	; 63
 2ea:	cd bf       	out	0x3d, r28	; 61
 2ec:	e1 2c       	mov	r14, r1
 2ee:	f1 2c       	mov	r15, r1
 2f0:	38 c0       	rjmp	.+112    	; 0x362 <printboard+0x96>
 2f2:	f7 01       	movw	r30, r14
 2f4:	ee 0f       	add	r30, r30
 2f6:	ff 1f       	adc	r31, r31
 2f8:	ee 0f       	add	r30, r30
 2fa:	ff 1f       	adc	r31, r31
 2fc:	ee 0f       	add	r30, r30
 2fe:	ff 1f       	adc	r31, r31
 300:	e0 0f       	add	r30, r16
 302:	f1 1f       	adc	r31, r17
 304:	ee 0f       	add	r30, r30
 306:	ff 1f       	adc	r31, r31
 308:	e0 50       	subi	r30, 0x00	; 0
 30a:	ff 4f       	sbci	r31, 0xFF	; 255
 30c:	80 81       	ld	r24, Z
 30e:	91 81       	ldd	r25, Z+1	; 0x01
 310:	9f 93       	push	r25
 312:	8f 93       	push	r24
 314:	80 e4       	ldi	r24, 0x40	; 64
 316:	91 e0       	ldi	r25, 0x01	; 1
 318:	9f 93       	push	r25
 31a:	8f 93       	push	r24
 31c:	ce 01       	movw	r24, r28
 31e:	01 96       	adiw	r24, 0x01	; 1
 320:	6c 01       	movw	r12, r24
 322:	9f 93       	push	r25
 324:	8f 93       	push	r24
 326:	0e 94 b5 02 	call	0x56a	; 0x56a <sprintf>
 32a:	c6 01       	movw	r24, r12
 32c:	0e 94 a8 02 	call	0x550	; 0x550 <UART_putstring>
 330:	0f 5f       	subi	r16, 0xFF	; 255
 332:	1f 4f       	sbci	r17, 0xFF	; 255
 334:	0f 90       	pop	r0
 336:	0f 90       	pop	r0
 338:	0f 90       	pop	r0
 33a:	0f 90       	pop	r0
 33c:	0f 90       	pop	r0
 33e:	0f 90       	pop	r0
 340:	02 c0       	rjmp	.+4      	; 0x346 <printboard+0x7a>
 342:	00 e0       	ldi	r16, 0x00	; 0
 344:	10 e0       	ldi	r17, 0x00	; 0
 346:	08 30       	cpi	r16, 0x08	; 8
 348:	11 05       	cpc	r17, r1
 34a:	9c f2       	brlt	.-90     	; 0x2f2 <printboard+0x26>
 34c:	88 e5       	ldi	r24, 0x58	; 88
 34e:	91 e0       	ldi	r25, 0x01	; 1
 350:	0e 94 a8 02 	call	0x550	; 0x550 <UART_putstring>
 354:	88 e5       	ldi	r24, 0x58	; 88
 356:	91 e0       	ldi	r25, 0x01	; 1
 358:	0e 94 a8 02 	call	0x550	; 0x550 <UART_putstring>
 35c:	9f ef       	ldi	r25, 0xFF	; 255
 35e:	e9 1a       	sub	r14, r25
 360:	f9 0a       	sbc	r15, r25
 362:	84 e0       	ldi	r24, 0x04	; 4
 364:	e8 16       	cp	r14, r24
 366:	f1 04       	cpc	r15, r1
 368:	64 f3       	brlt	.-40     	; 0x342 <printboard+0x76>
 36a:	69 96       	adiw	r28, 0x19	; 25
 36c:	0f b6       	in	r0, 0x3f	; 63
 36e:	f8 94       	cli
 370:	de bf       	out	0x3e, r29	; 62
 372:	0f be       	out	0x3f, r0	; 63
 374:	cd bf       	out	0x3d, r28	; 61
 376:	df 91       	pop	r29
 378:	cf 91       	pop	r28
 37a:	1f 91       	pop	r17
 37c:	0f 91       	pop	r16
 37e:	ff 90       	pop	r15
 380:	ef 90       	pop	r14
 382:	df 90       	pop	r13
 384:	cf 90       	pop	r12
 386:	08 95       	ret

00000388 <main>:

char s[20];

int main(void)
{
   Initialization(); 
 388:	0e 94 53 00 	call	0xa6	; 0xa6 <Initialization>
    UART_init(BAUD_PRESCALER);
 38c:	87 e6       	ldi	r24, 0x67	; 103
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	0e 94 92 02 	call	0x524	; 0x524 <UART_init>
    while (1) 
    {
// 	
	latch(latchPin,clockPin);
 394:	67 e0       	ldi	r22, 0x07	; 7
 396:	70 e0       	ldi	r23, 0x00	; 0
 398:	80 e0       	ldi	r24, 0x00	; 0
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	0e 94 69 02 	call	0x4d2	; 0x4d2 <latch>
	
	rows[3] = shiftIn(dataPin,clockPin);
 3a0:	67 e0       	ldi	r22, 0x07	; 7
 3a2:	70 e0       	ldi	r23, 0x00	; 0
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	0e 94 34 02 	call	0x468	; 0x468 <shiftIn>
 3ac:	c2 e6       	ldi	r28, 0x62	; 98
 3ae:	d1 e0       	ldi	r29, 0x01	; 1
 3b0:	8b 83       	std	Y+3, r24	; 0x03
	rows[2] = shiftIn(dataPin,clockPin);
 3b2:	67 e0       	ldi	r22, 0x07	; 7
 3b4:	70 e0       	ldi	r23, 0x00	; 0
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	0e 94 34 02 	call	0x468	; 0x468 <shiftIn>
 3be:	8a 83       	std	Y+2, r24	; 0x02
	rows[1] = shiftIn(dataPin,clockPin);
 3c0:	67 e0       	ldi	r22, 0x07	; 7
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	81 e0       	ldi	r24, 0x01	; 1
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 34 02 	call	0x468	; 0x468 <shiftIn>
 3cc:	89 83       	std	Y+1, r24	; 0x01
	rows[0] = shiftIn(dataPin,clockPin);
 3ce:	67 e0       	ldi	r22, 0x07	; 7
 3d0:	70 e0       	ldi	r23, 0x00	; 0
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	0e 94 34 02 	call	0x468	; 0x468 <shiftIn>
 3da:	88 83       	st	Y, r24

	//boardupdate(); 

//	rowsupdate();
	
	squareprev();
 3dc:	0e 94 9a 00 	call	0x134	; 0x134 <squareprev>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3e0:	2f ef       	ldi	r18, 0xFF	; 255
 3e2:	89 e6       	ldi	r24, 0x69	; 105
 3e4:	98 e1       	ldi	r25, 0x18	; 24
 3e6:	21 50       	subi	r18, 0x01	; 1
 3e8:	80 40       	sbci	r24, 0x00	; 0
 3ea:	90 40       	sbci	r25, 0x00	; 0
 3ec:	e1 f7       	brne	.-8      	; 0x3e6 <main+0x5e>
 3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <main+0x68>
 3f0:	00 00       	nop
	_delay_ms(500);
	
	sprintf(s,"temp = %d \n\r",temp);
 3f2:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <temp>
 3f6:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <temp+0x1>
 3fa:	9f 93       	push	r25
 3fc:	8f 93       	push	r24
 3fe:	8e e4       	ldi	r24, 0x4E	; 78
 400:	91 e0       	ldi	r25, 0x01	; 1
 402:	9f 93       	push	r25
 404:	8f 93       	push	r24
 406:	80 ee       	ldi	r24, 0xE0	; 224
 408:	91 e0       	ldi	r25, 0x01	; 1
 40a:	9f 93       	push	r25
 40c:	8f 93       	push	r24
 40e:	0e 94 b5 02 	call	0x56a	; 0x56a <sprintf>
	UART_putstring(s);
 412:	80 ee       	ldi	r24, 0xE0	; 224
 414:	91 e0       	ldi	r25, 0x01	; 1
 416:	0e 94 a8 02 	call	0x550	; 0x550 <UART_putstring>
		
		if (pick)
 41a:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <__data_end>
 41e:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <__data_end+0x1>
 422:	0f 90       	pop	r0
 424:	0f 90       	pop	r0
 426:	0f 90       	pop	r0
 428:	0f 90       	pop	r0
 42a:	0f 90       	pop	r0
 42c:	0f 90       	pop	r0
 42e:	89 2b       	or	r24, r25
 430:	59 f0       	breq	.+22     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
		{
			squarenext();
 432:	0e 94 ff 00 	call	0x1fe	; 0x1fe <squarenext>
 436:	2f ef       	ldi	r18, 0xFF	; 255
 438:	89 e6       	ldi	r24, 0x69	; 105
 43a:	98 e1       	ldi	r25, 0x18	; 24
 43c:	21 50       	subi	r18, 0x01	; 1
 43e:	80 40       	sbci	r24, 0x00	; 0
 440:	90 40       	sbci	r25, 0x00	; 0
 442:	e1 f7       	brne	.-8      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 444:	00 c0       	rjmp	.+0      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 446:	00 00       	nop
			_delay_ms(500);
		}
	
// 		if (print)
// 			{
				printboard();
 448:	0e 94 66 01 	call	0x2cc	; 0x2cc <printboard>
 44c:	2f ef       	ldi	r18, 0xFF	; 255
 44e:	89 e6       	ldi	r24, 0x69	; 105
 450:	98 e1       	ldi	r25, 0x18	; 24
 452:	21 50       	subi	r18, 0x01	; 1
 454:	80 40       	sbci	r24, 0x00	; 0
 456:	90 40       	sbci	r25, 0x00	; 0
 458:	e1 f7       	brne	.-8      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 45a:	00 c0       	rjmp	.+0      	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 45c:	00 00       	nop
				_delay_ms(500);
				print= 0;
 45e:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <print+0x1>
 462:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <print>
			//}

	}
 466:	96 cf       	rjmp	.-212    	; 0x394 <main+0xc>

00000468 <shiftIn>:
char abc[10]= {0};
char space = '\n';


uint8_t shiftIn(int mydataPin, int myclockPin) 
{
 468:	a8 2f       	mov	r26, r24
	uint8_t myDataIn = 0x00; 
	uint8_t temp = 0; 
	
	for (int i=0 ; i<8 ; i++)
 46a:	e0 e0       	ldi	r30, 0x00	; 0
 46c:	f0 e0       	ldi	r31, 0x00	; 0
char space = '\n';


uint8_t shiftIn(int mydataPin, int myclockPin) 
{
	uint8_t myDataIn = 0x00; 
 46e:	80 e0       	ldi	r24, 0x00	; 0
	uint8_t temp = 0; 
	
	for (int i=0 ; i<8 ; i++)
 470:	2c c0       	rjmp	.+88     	; 0x4ca <shiftIn+0x62>
		{
			 PORTD &= ~(1U<<myclockPin);
 472:	9b b1       	in	r25, 0x0b	; 11
 474:	21 e0       	ldi	r18, 0x01	; 1
 476:	30 e0       	ldi	r19, 0x00	; 0
 478:	a9 01       	movw	r20, r18
 47a:	06 2e       	mov	r0, r22
 47c:	02 c0       	rjmp	.+4      	; 0x482 <shiftIn+0x1a>
 47e:	44 0f       	add	r20, r20
 480:	55 1f       	adc	r21, r21
 482:	0a 94       	dec	r0
 484:	e2 f7       	brpl	.-8      	; 0x47e <shiftIn+0x16>
 486:	74 2f       	mov	r23, r20
 488:	70 95       	com	r23
 48a:	97 23       	and	r25, r23
 48c:	9b b9       	out	0x0b, r25	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 48e:	95 e1       	ldi	r25, 0x15	; 21
 490:	9a 95       	dec	r25
 492:	f1 f7       	brne	.-4      	; 0x490 <shiftIn+0x28>
 494:	00 00       	nop
			_delay_us(4);
			 temp = (PINB & (1<<mydataPin));
 496:	93 b1       	in	r25, 0x03	; 3
 498:	0a 2e       	mov	r0, r26
 49a:	02 c0       	rjmp	.+4      	; 0x4a0 <shiftIn+0x38>
 49c:	22 0f       	add	r18, r18
 49e:	33 1f       	adc	r19, r19
 4a0:	0a 94       	dec	r0
 4a2:	e2 f7       	brpl	.-8      	; 0x49c <shiftIn+0x34>
 4a4:	29 23       	and	r18, r25
// 			 sprintf(abc,"%d\t",temp);
// 			 UART_putstring(abc);
			 
			 if (temp)
 4a6:	49 f0       	breq	.+18     	; 0x4ba <shiftIn+0x52>
			 {
				 myDataIn = myDataIn | (1<<i); 
 4a8:	21 e0       	ldi	r18, 0x01	; 1
 4aa:	30 e0       	ldi	r19, 0x00	; 0
 4ac:	0e 2e       	mov	r0, r30
 4ae:	02 c0       	rjmp	.+4      	; 0x4b4 <shiftIn+0x4c>
 4b0:	22 0f       	add	r18, r18
 4b2:	33 1f       	adc	r19, r19
 4b4:	0a 94       	dec	r0
 4b6:	e2 f7       	brpl	.-8      	; 0x4b0 <shiftIn+0x48>
 4b8:	82 2b       	or	r24, r18
				
			 } 
			 
		PORTD |= (1U<< myclockPin); 
 4ba:	9b b1       	in	r25, 0x0b	; 11
 4bc:	49 2b       	or	r20, r25
 4be:	4b b9       	out	0x0b, r20	; 11
 4c0:	95 e1       	ldi	r25, 0x15	; 21
 4c2:	9a 95       	dec	r25
 4c4:	f1 f7       	brne	.-4      	; 0x4c2 <shiftIn+0x5a>
 4c6:	00 00       	nop
uint8_t shiftIn(int mydataPin, int myclockPin) 
{
	uint8_t myDataIn = 0x00; 
	uint8_t temp = 0; 
	
	for (int i=0 ; i<8 ; i++)
 4c8:	31 96       	adiw	r30, 0x01	; 1
 4ca:	e8 30       	cpi	r30, 0x08	; 8
 4cc:	f1 05       	cpc	r31, r1
 4ce:	8c f2       	brlt	.-94     	; 0x472 <shiftIn+0xa>
			 
		}
	/* UART_send(space);*/
	  return myDataIn; 
	  
}
 4d0:	08 95       	ret

000004d2 <latch>:
	
void latch( int mylatchPin, int myclockPin)
{
	
	PORTD &= ~(1U<< myclockPin);
 4d2:	4b b1       	in	r20, 0x0b	; 11
 4d4:	21 e0       	ldi	r18, 0x01	; 1
 4d6:	30 e0       	ldi	r19, 0x00	; 0
 4d8:	f9 01       	movw	r30, r18
 4da:	02 c0       	rjmp	.+4      	; 0x4e0 <latch+0xe>
 4dc:	ee 0f       	add	r30, r30
 4de:	ff 1f       	adc	r31, r31
 4e0:	6a 95       	dec	r22
 4e2:	e2 f7       	brpl	.-8      	; 0x4dc <latch+0xa>
 4e4:	9e 2f       	mov	r25, r30
 4e6:	90 95       	com	r25
 4e8:	94 23       	and	r25, r20
 4ea:	9b b9       	out	0x0b, r25	; 11
 4ec:	fa e6       	ldi	r31, 0x6A	; 106
 4ee:	fa 95       	dec	r31
 4f0:	f1 f7       	brne	.-4      	; 0x4ee <latch+0x1c>
 4f2:	00 c0       	rjmp	.+0      	; 0x4f4 <latch+0x22>
	_delay_us(20);
	PORTB &= ~(1U<<mylatchPin);  // Read Parallel
 4f4:	45 b1       	in	r20, 0x05	; 5
 4f6:	b9 01       	movw	r22, r18
 4f8:	02 c0       	rjmp	.+4      	; 0x4fe <latch+0x2c>
 4fa:	66 0f       	add	r22, r22
 4fc:	77 1f       	adc	r23, r23
 4fe:	8a 95       	dec	r24
 500:	e2 f7       	brpl	.-8      	; 0x4fa <latch+0x28>
 502:	cb 01       	movw	r24, r22
 504:	96 2f       	mov	r25, r22
 506:	90 95       	com	r25
 508:	94 23       	and	r25, r20
 50a:	95 b9       	out	0x05, r25	; 5
 50c:	7a e6       	ldi	r23, 0x6A	; 106
 50e:	7a 95       	dec	r23
 510:	f1 f7       	brne	.-4      	; 0x50e <latch+0x3c>
 512:	00 c0       	rjmp	.+0      	; 0x514 <latch+0x42>
	_delay_us(20);
	PORTB |= (1U<<mylatchPin); // Serial Out
 514:	95 b1       	in	r25, 0x05	; 5
 516:	89 2b       	or	r24, r25
 518:	85 b9       	out	0x05, r24	; 5
 51a:	8a e6       	ldi	r24, 0x6A	; 106
 51c:	8a 95       	dec	r24
 51e:	f1 f7       	brne	.-4      	; 0x51c <latch+0x4a>
 520:	00 c0       	rjmp	.+0      	; 0x522 <latch+0x50>
 522:	08 95       	ret

00000524 <UART_init>:

void UART_init(int BAUD_PRESCALER)
{
	
	/*Set baud rate */
	UBRR0H = (unsigned char)(BAUD_PRESCALER>>8);
 524:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)BAUD_PRESCALER;
 528:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 52c:	88 e1       	ldi	r24, 0x18	; 24
 52e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	/* Set frame format: 2 stop bits, 8 data bits */
	UCSR0C = (1<<UCSZ01) | (1<<UCSZ00); // 8 data bits
 532:	e2 ec       	ldi	r30, 0xC2	; 194
 534:	f0 e0       	ldi	r31, 0x00	; 0
 536:	86 e0       	ldi	r24, 0x06	; 6
 538:	80 83       	st	Z, r24
	UCSR0C |= (1<<USBS0); // 2 stop bits
 53a:	80 81       	ld	r24, Z
 53c:	88 60       	ori	r24, 0x08	; 8
 53e:	80 83       	st	Z, r24
 540:	08 95       	ret

00000542 <UART_send>:
}

void UART_send(unsigned char data)
{
	// Wait for empty transmit buffer
	while(!(UCSR0A & (1<<UDRE0)));
 542:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 546:	95 ff       	sbrs	r25, 5
 548:	fc cf       	rjmp	.-8      	; 0x542 <UART_send>
	// Put data into buffer and send data
	UDR0 = data;
 54a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 54e:	08 95       	ret

00000550 <UART_putstring>:
	
}

void UART_putstring(char* StringPtr)
{
 550:	cf 93       	push	r28
 552:	df 93       	push	r29
 554:	ec 01       	movw	r28, r24
	while(*StringPtr != 0x00)
 556:	03 c0       	rjmp	.+6      	; 0x55e <UART_putstring+0xe>
	{
		UART_send(*StringPtr);
 558:	0e 94 a1 02 	call	0x542	; 0x542 <UART_send>
		StringPtr++;
 55c:	21 96       	adiw	r28, 0x01	; 1
	
}

void UART_putstring(char* StringPtr)
{
	while(*StringPtr != 0x00)
 55e:	88 81       	ld	r24, Y
 560:	81 11       	cpse	r24, r1
 562:	fa cf       	rjmp	.-12     	; 0x558 <UART_putstring+0x8>
	{
		UART_send(*StringPtr);
		StringPtr++;
	}
 564:	df 91       	pop	r29
 566:	cf 91       	pop	r28
 568:	08 95       	ret

0000056a <sprintf>:
 56a:	ae e0       	ldi	r26, 0x0E	; 14
 56c:	b0 e0       	ldi	r27, 0x00	; 0
 56e:	eb eb       	ldi	r30, 0xBB	; 187
 570:	f2 e0       	ldi	r31, 0x02	; 2
 572:	0c 94 76 05 	jmp	0xaec	; 0xaec <__prologue_saves__+0x1c>
 576:	0d 89       	ldd	r16, Y+21	; 0x15
 578:	1e 89       	ldd	r17, Y+22	; 0x16
 57a:	86 e0       	ldi	r24, 0x06	; 6
 57c:	8c 83       	std	Y+4, r24	; 0x04
 57e:	1a 83       	std	Y+2, r17	; 0x02
 580:	09 83       	std	Y+1, r16	; 0x01
 582:	8f ef       	ldi	r24, 0xFF	; 255
 584:	9f e7       	ldi	r25, 0x7F	; 127
 586:	9e 83       	std	Y+6, r25	; 0x06
 588:	8d 83       	std	Y+5, r24	; 0x05
 58a:	ae 01       	movw	r20, r28
 58c:	47 5e       	subi	r20, 0xE7	; 231
 58e:	5f 4f       	sbci	r21, 0xFF	; 255
 590:	6f 89       	ldd	r22, Y+23	; 0x17
 592:	78 8d       	ldd	r23, Y+24	; 0x18
 594:	ce 01       	movw	r24, r28
 596:	01 96       	adiw	r24, 0x01	; 1
 598:	0e 94 d7 02 	call	0x5ae	; 0x5ae <vfprintf>
 59c:	ef 81       	ldd	r30, Y+7	; 0x07
 59e:	f8 85       	ldd	r31, Y+8	; 0x08
 5a0:	e0 0f       	add	r30, r16
 5a2:	f1 1f       	adc	r31, r17
 5a4:	10 82       	st	Z, r1
 5a6:	2e 96       	adiw	r28, 0x0e	; 14
 5a8:	e4 e0       	ldi	r30, 0x04	; 4
 5aa:	0c 94 92 05 	jmp	0xb24	; 0xb24 <__epilogue_restores__+0x1c>

000005ae <vfprintf>:
 5ae:	ab e0       	ldi	r26, 0x0B	; 11
 5b0:	b0 e0       	ldi	r27, 0x00	; 0
 5b2:	ed ed       	ldi	r30, 0xDD	; 221
 5b4:	f2 e0       	ldi	r31, 0x02	; 2
 5b6:	0c 94 68 05 	jmp	0xad0	; 0xad0 <__prologue_saves__>
 5ba:	6c 01       	movw	r12, r24
 5bc:	7b 01       	movw	r14, r22
 5be:	8a 01       	movw	r16, r20
 5c0:	fc 01       	movw	r30, r24
 5c2:	17 82       	std	Z+7, r1	; 0x07
 5c4:	16 82       	std	Z+6, r1	; 0x06
 5c6:	83 81       	ldd	r24, Z+3	; 0x03
 5c8:	81 ff       	sbrs	r24, 1
 5ca:	cc c1       	rjmp	.+920    	; 0x964 <__stack+0x65>
 5cc:	ce 01       	movw	r24, r28
 5ce:	01 96       	adiw	r24, 0x01	; 1
 5d0:	3c 01       	movw	r6, r24
 5d2:	f6 01       	movw	r30, r12
 5d4:	93 81       	ldd	r25, Z+3	; 0x03
 5d6:	f7 01       	movw	r30, r14
 5d8:	93 fd       	sbrc	r25, 3
 5da:	85 91       	lpm	r24, Z+
 5dc:	93 ff       	sbrs	r25, 3
 5de:	81 91       	ld	r24, Z+
 5e0:	7f 01       	movw	r14, r30
 5e2:	88 23       	and	r24, r24
 5e4:	09 f4       	brne	.+2      	; 0x5e8 <vfprintf+0x3a>
 5e6:	ba c1       	rjmp	.+884    	; 0x95c <__stack+0x5d>
 5e8:	85 32       	cpi	r24, 0x25	; 37
 5ea:	39 f4       	brne	.+14     	; 0x5fa <vfprintf+0x4c>
 5ec:	93 fd       	sbrc	r25, 3
 5ee:	85 91       	lpm	r24, Z+
 5f0:	93 ff       	sbrs	r25, 3
 5f2:	81 91       	ld	r24, Z+
 5f4:	7f 01       	movw	r14, r30
 5f6:	85 32       	cpi	r24, 0x25	; 37
 5f8:	29 f4       	brne	.+10     	; 0x604 <vfprintf+0x56>
 5fa:	b6 01       	movw	r22, r12
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	0e 94 ce 04 	call	0x99c	; 0x99c <fputc>
 602:	e7 cf       	rjmp	.-50     	; 0x5d2 <vfprintf+0x24>
 604:	91 2c       	mov	r9, r1
 606:	21 2c       	mov	r2, r1
 608:	31 2c       	mov	r3, r1
 60a:	ff e1       	ldi	r31, 0x1F	; 31
 60c:	f3 15       	cp	r31, r3
 60e:	d8 f0       	brcs	.+54     	; 0x646 <vfprintf+0x98>
 610:	8b 32       	cpi	r24, 0x2B	; 43
 612:	79 f0       	breq	.+30     	; 0x632 <vfprintf+0x84>
 614:	38 f4       	brcc	.+14     	; 0x624 <vfprintf+0x76>
 616:	80 32       	cpi	r24, 0x20	; 32
 618:	79 f0       	breq	.+30     	; 0x638 <vfprintf+0x8a>
 61a:	83 32       	cpi	r24, 0x23	; 35
 61c:	a1 f4       	brne	.+40     	; 0x646 <vfprintf+0x98>
 61e:	23 2d       	mov	r18, r3
 620:	20 61       	ori	r18, 0x10	; 16
 622:	1d c0       	rjmp	.+58     	; 0x65e <vfprintf+0xb0>
 624:	8d 32       	cpi	r24, 0x2D	; 45
 626:	61 f0       	breq	.+24     	; 0x640 <vfprintf+0x92>
 628:	80 33       	cpi	r24, 0x30	; 48
 62a:	69 f4       	brne	.+26     	; 0x646 <vfprintf+0x98>
 62c:	23 2d       	mov	r18, r3
 62e:	21 60       	ori	r18, 0x01	; 1
 630:	16 c0       	rjmp	.+44     	; 0x65e <vfprintf+0xb0>
 632:	83 2d       	mov	r24, r3
 634:	82 60       	ori	r24, 0x02	; 2
 636:	38 2e       	mov	r3, r24
 638:	e3 2d       	mov	r30, r3
 63a:	e4 60       	ori	r30, 0x04	; 4
 63c:	3e 2e       	mov	r3, r30
 63e:	2a c0       	rjmp	.+84     	; 0x694 <vfprintf+0xe6>
 640:	f3 2d       	mov	r31, r3
 642:	f8 60       	ori	r31, 0x08	; 8
 644:	1d c0       	rjmp	.+58     	; 0x680 <vfprintf+0xd2>
 646:	37 fc       	sbrc	r3, 7
 648:	2d c0       	rjmp	.+90     	; 0x6a4 <vfprintf+0xf6>
 64a:	20 ed       	ldi	r18, 0xD0	; 208
 64c:	28 0f       	add	r18, r24
 64e:	2a 30       	cpi	r18, 0x0A	; 10
 650:	40 f0       	brcs	.+16     	; 0x662 <vfprintf+0xb4>
 652:	8e 32       	cpi	r24, 0x2E	; 46
 654:	b9 f4       	brne	.+46     	; 0x684 <vfprintf+0xd6>
 656:	36 fc       	sbrc	r3, 6
 658:	81 c1       	rjmp	.+770    	; 0x95c <__stack+0x5d>
 65a:	23 2d       	mov	r18, r3
 65c:	20 64       	ori	r18, 0x40	; 64
 65e:	32 2e       	mov	r3, r18
 660:	19 c0       	rjmp	.+50     	; 0x694 <vfprintf+0xe6>
 662:	36 fe       	sbrs	r3, 6
 664:	06 c0       	rjmp	.+12     	; 0x672 <vfprintf+0xc4>
 666:	8a e0       	ldi	r24, 0x0A	; 10
 668:	98 9e       	mul	r9, r24
 66a:	20 0d       	add	r18, r0
 66c:	11 24       	eor	r1, r1
 66e:	92 2e       	mov	r9, r18
 670:	11 c0       	rjmp	.+34     	; 0x694 <vfprintf+0xe6>
 672:	ea e0       	ldi	r30, 0x0A	; 10
 674:	2e 9e       	mul	r2, r30
 676:	20 0d       	add	r18, r0
 678:	11 24       	eor	r1, r1
 67a:	22 2e       	mov	r2, r18
 67c:	f3 2d       	mov	r31, r3
 67e:	f0 62       	ori	r31, 0x20	; 32
 680:	3f 2e       	mov	r3, r31
 682:	08 c0       	rjmp	.+16     	; 0x694 <vfprintf+0xe6>
 684:	8c 36       	cpi	r24, 0x6C	; 108
 686:	21 f4       	brne	.+8      	; 0x690 <vfprintf+0xe2>
 688:	83 2d       	mov	r24, r3
 68a:	80 68       	ori	r24, 0x80	; 128
 68c:	38 2e       	mov	r3, r24
 68e:	02 c0       	rjmp	.+4      	; 0x694 <vfprintf+0xe6>
 690:	88 36       	cpi	r24, 0x68	; 104
 692:	41 f4       	brne	.+16     	; 0x6a4 <vfprintf+0xf6>
 694:	f7 01       	movw	r30, r14
 696:	93 fd       	sbrc	r25, 3
 698:	85 91       	lpm	r24, Z+
 69a:	93 ff       	sbrs	r25, 3
 69c:	81 91       	ld	r24, Z+
 69e:	7f 01       	movw	r14, r30
 6a0:	81 11       	cpse	r24, r1
 6a2:	b3 cf       	rjmp	.-154    	; 0x60a <vfprintf+0x5c>
 6a4:	98 2f       	mov	r25, r24
 6a6:	9f 7d       	andi	r25, 0xDF	; 223
 6a8:	95 54       	subi	r25, 0x45	; 69
 6aa:	93 30       	cpi	r25, 0x03	; 3
 6ac:	28 f4       	brcc	.+10     	; 0x6b8 <vfprintf+0x10a>
 6ae:	0c 5f       	subi	r16, 0xFC	; 252
 6b0:	1f 4f       	sbci	r17, 0xFF	; 255
 6b2:	9f e3       	ldi	r25, 0x3F	; 63
 6b4:	99 83       	std	Y+1, r25	; 0x01
 6b6:	0d c0       	rjmp	.+26     	; 0x6d2 <vfprintf+0x124>
 6b8:	83 36       	cpi	r24, 0x63	; 99
 6ba:	31 f0       	breq	.+12     	; 0x6c8 <vfprintf+0x11a>
 6bc:	83 37       	cpi	r24, 0x73	; 115
 6be:	71 f0       	breq	.+28     	; 0x6dc <vfprintf+0x12e>
 6c0:	83 35       	cpi	r24, 0x53	; 83
 6c2:	09 f0       	breq	.+2      	; 0x6c6 <vfprintf+0x118>
 6c4:	59 c0       	rjmp	.+178    	; 0x778 <vfprintf+0x1ca>
 6c6:	21 c0       	rjmp	.+66     	; 0x70a <vfprintf+0x15c>
 6c8:	f8 01       	movw	r30, r16
 6ca:	80 81       	ld	r24, Z
 6cc:	89 83       	std	Y+1, r24	; 0x01
 6ce:	0e 5f       	subi	r16, 0xFE	; 254
 6d0:	1f 4f       	sbci	r17, 0xFF	; 255
 6d2:	88 24       	eor	r8, r8
 6d4:	83 94       	inc	r8
 6d6:	91 2c       	mov	r9, r1
 6d8:	53 01       	movw	r10, r6
 6da:	13 c0       	rjmp	.+38     	; 0x702 <vfprintf+0x154>
 6dc:	28 01       	movw	r4, r16
 6de:	f2 e0       	ldi	r31, 0x02	; 2
 6e0:	4f 0e       	add	r4, r31
 6e2:	51 1c       	adc	r5, r1
 6e4:	f8 01       	movw	r30, r16
 6e6:	a0 80       	ld	r10, Z
 6e8:	b1 80       	ldd	r11, Z+1	; 0x01
 6ea:	36 fe       	sbrs	r3, 6
 6ec:	03 c0       	rjmp	.+6      	; 0x6f4 <vfprintf+0x146>
 6ee:	69 2d       	mov	r22, r9
 6f0:	70 e0       	ldi	r23, 0x00	; 0
 6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <vfprintf+0x14a>
 6f4:	6f ef       	ldi	r22, 0xFF	; 255
 6f6:	7f ef       	ldi	r23, 0xFF	; 255
 6f8:	c5 01       	movw	r24, r10
 6fa:	0e 94 c3 04 	call	0x986	; 0x986 <strnlen>
 6fe:	4c 01       	movw	r8, r24
 700:	82 01       	movw	r16, r4
 702:	f3 2d       	mov	r31, r3
 704:	ff 77       	andi	r31, 0x7F	; 127
 706:	3f 2e       	mov	r3, r31
 708:	16 c0       	rjmp	.+44     	; 0x736 <vfprintf+0x188>
 70a:	28 01       	movw	r4, r16
 70c:	22 e0       	ldi	r18, 0x02	; 2
 70e:	42 0e       	add	r4, r18
 710:	51 1c       	adc	r5, r1
 712:	f8 01       	movw	r30, r16
 714:	a0 80       	ld	r10, Z
 716:	b1 80       	ldd	r11, Z+1	; 0x01
 718:	36 fe       	sbrs	r3, 6
 71a:	03 c0       	rjmp	.+6      	; 0x722 <vfprintf+0x174>
 71c:	69 2d       	mov	r22, r9
 71e:	70 e0       	ldi	r23, 0x00	; 0
 720:	02 c0       	rjmp	.+4      	; 0x726 <vfprintf+0x178>
 722:	6f ef       	ldi	r22, 0xFF	; 255
 724:	7f ef       	ldi	r23, 0xFF	; 255
 726:	c5 01       	movw	r24, r10
 728:	0e 94 b8 04 	call	0x970	; 0x970 <strnlen_P>
 72c:	4c 01       	movw	r8, r24
 72e:	f3 2d       	mov	r31, r3
 730:	f0 68       	ori	r31, 0x80	; 128
 732:	3f 2e       	mov	r3, r31
 734:	82 01       	movw	r16, r4
 736:	33 fc       	sbrc	r3, 3
 738:	1b c0       	rjmp	.+54     	; 0x770 <vfprintf+0x1c2>
 73a:	82 2d       	mov	r24, r2
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	88 16       	cp	r8, r24
 740:	99 06       	cpc	r9, r25
 742:	b0 f4       	brcc	.+44     	; 0x770 <vfprintf+0x1c2>
 744:	b6 01       	movw	r22, r12
 746:	80 e2       	ldi	r24, 0x20	; 32
 748:	90 e0       	ldi	r25, 0x00	; 0
 74a:	0e 94 ce 04 	call	0x99c	; 0x99c <fputc>
 74e:	2a 94       	dec	r2
 750:	f4 cf       	rjmp	.-24     	; 0x73a <vfprintf+0x18c>
 752:	f5 01       	movw	r30, r10
 754:	37 fc       	sbrc	r3, 7
 756:	85 91       	lpm	r24, Z+
 758:	37 fe       	sbrs	r3, 7
 75a:	81 91       	ld	r24, Z+
 75c:	5f 01       	movw	r10, r30
 75e:	b6 01       	movw	r22, r12
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	0e 94 ce 04 	call	0x99c	; 0x99c <fputc>
 766:	21 10       	cpse	r2, r1
 768:	2a 94       	dec	r2
 76a:	21 e0       	ldi	r18, 0x01	; 1
 76c:	82 1a       	sub	r8, r18
 76e:	91 08       	sbc	r9, r1
 770:	81 14       	cp	r8, r1
 772:	91 04       	cpc	r9, r1
 774:	71 f7       	brne	.-36     	; 0x752 <vfprintf+0x1a4>
 776:	e8 c0       	rjmp	.+464    	; 0x948 <__stack+0x49>
 778:	84 36       	cpi	r24, 0x64	; 100
 77a:	11 f0       	breq	.+4      	; 0x780 <vfprintf+0x1d2>
 77c:	89 36       	cpi	r24, 0x69	; 105
 77e:	41 f5       	brne	.+80     	; 0x7d0 <vfprintf+0x222>
 780:	f8 01       	movw	r30, r16
 782:	37 fe       	sbrs	r3, 7
 784:	07 c0       	rjmp	.+14     	; 0x794 <vfprintf+0x1e6>
 786:	60 81       	ld	r22, Z
 788:	71 81       	ldd	r23, Z+1	; 0x01
 78a:	82 81       	ldd	r24, Z+2	; 0x02
 78c:	93 81       	ldd	r25, Z+3	; 0x03
 78e:	0c 5f       	subi	r16, 0xFC	; 252
 790:	1f 4f       	sbci	r17, 0xFF	; 255
 792:	08 c0       	rjmp	.+16     	; 0x7a4 <vfprintf+0x1f6>
 794:	60 81       	ld	r22, Z
 796:	71 81       	ldd	r23, Z+1	; 0x01
 798:	07 2e       	mov	r0, r23
 79a:	00 0c       	add	r0, r0
 79c:	88 0b       	sbc	r24, r24
 79e:	99 0b       	sbc	r25, r25
 7a0:	0e 5f       	subi	r16, 0xFE	; 254
 7a2:	1f 4f       	sbci	r17, 0xFF	; 255
 7a4:	f3 2d       	mov	r31, r3
 7a6:	ff 76       	andi	r31, 0x6F	; 111
 7a8:	3f 2e       	mov	r3, r31
 7aa:	97 ff       	sbrs	r25, 7
 7ac:	09 c0       	rjmp	.+18     	; 0x7c0 <vfprintf+0x212>
 7ae:	90 95       	com	r25
 7b0:	80 95       	com	r24
 7b2:	70 95       	com	r23
 7b4:	61 95       	neg	r22
 7b6:	7f 4f       	sbci	r23, 0xFF	; 255
 7b8:	8f 4f       	sbci	r24, 0xFF	; 255
 7ba:	9f 4f       	sbci	r25, 0xFF	; 255
 7bc:	f0 68       	ori	r31, 0x80	; 128
 7be:	3f 2e       	mov	r3, r31
 7c0:	2a e0       	ldi	r18, 0x0A	; 10
 7c2:	30 e0       	ldi	r19, 0x00	; 0
 7c4:	a3 01       	movw	r20, r6
 7c6:	0e 94 0a 05 	call	0xa14	; 0xa14 <__ultoa_invert>
 7ca:	88 2e       	mov	r8, r24
 7cc:	86 18       	sub	r8, r6
 7ce:	45 c0       	rjmp	.+138    	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 7d0:	85 37       	cpi	r24, 0x75	; 117
 7d2:	31 f4       	brne	.+12     	; 0x7e0 <vfprintf+0x232>
 7d4:	23 2d       	mov	r18, r3
 7d6:	2f 7e       	andi	r18, 0xEF	; 239
 7d8:	b2 2e       	mov	r11, r18
 7da:	2a e0       	ldi	r18, 0x0A	; 10
 7dc:	30 e0       	ldi	r19, 0x00	; 0
 7de:	25 c0       	rjmp	.+74     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 7e0:	93 2d       	mov	r25, r3
 7e2:	99 7f       	andi	r25, 0xF9	; 249
 7e4:	b9 2e       	mov	r11, r25
 7e6:	8f 36       	cpi	r24, 0x6F	; 111
 7e8:	c1 f0       	breq	.+48     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 7ea:	18 f4       	brcc	.+6      	; 0x7f2 <vfprintf+0x244>
 7ec:	88 35       	cpi	r24, 0x58	; 88
 7ee:	79 f0       	breq	.+30     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 7f0:	b5 c0       	rjmp	.+362    	; 0x95c <__stack+0x5d>
 7f2:	80 37       	cpi	r24, 0x70	; 112
 7f4:	19 f0       	breq	.+6      	; 0x7fc <vfprintf+0x24e>
 7f6:	88 37       	cpi	r24, 0x78	; 120
 7f8:	21 f0       	breq	.+8      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 7fa:	b0 c0       	rjmp	.+352    	; 0x95c <__stack+0x5d>
 7fc:	e9 2f       	mov	r30, r25
 7fe:	e0 61       	ori	r30, 0x10	; 16
 800:	be 2e       	mov	r11, r30
 802:	b4 fe       	sbrs	r11, 4
 804:	0d c0       	rjmp	.+26     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 806:	fb 2d       	mov	r31, r11
 808:	f4 60       	ori	r31, 0x04	; 4
 80a:	bf 2e       	mov	r11, r31
 80c:	09 c0       	rjmp	.+18     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 80e:	34 fe       	sbrs	r3, 4
 810:	0a c0       	rjmp	.+20     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 812:	29 2f       	mov	r18, r25
 814:	26 60       	ori	r18, 0x06	; 6
 816:	b2 2e       	mov	r11, r18
 818:	06 c0       	rjmp	.+12     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 81a:	28 e0       	ldi	r18, 0x08	; 8
 81c:	30 e0       	ldi	r19, 0x00	; 0
 81e:	05 c0       	rjmp	.+10     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 820:	20 e1       	ldi	r18, 0x10	; 16
 822:	30 e0       	ldi	r19, 0x00	; 0
 824:	02 c0       	rjmp	.+4      	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 826:	20 e1       	ldi	r18, 0x10	; 16
 828:	32 e0       	ldi	r19, 0x02	; 2
 82a:	f8 01       	movw	r30, r16
 82c:	b7 fe       	sbrs	r11, 7
 82e:	07 c0       	rjmp	.+14     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 830:	60 81       	ld	r22, Z
 832:	71 81       	ldd	r23, Z+1	; 0x01
 834:	82 81       	ldd	r24, Z+2	; 0x02
 836:	93 81       	ldd	r25, Z+3	; 0x03
 838:	0c 5f       	subi	r16, 0xFC	; 252
 83a:	1f 4f       	sbci	r17, 0xFF	; 255
 83c:	06 c0       	rjmp	.+12     	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 83e:	60 81       	ld	r22, Z
 840:	71 81       	ldd	r23, Z+1	; 0x01
 842:	80 e0       	ldi	r24, 0x00	; 0
 844:	90 e0       	ldi	r25, 0x00	; 0
 846:	0e 5f       	subi	r16, 0xFE	; 254
 848:	1f 4f       	sbci	r17, 0xFF	; 255
 84a:	a3 01       	movw	r20, r6
 84c:	0e 94 0a 05 	call	0xa14	; 0xa14 <__ultoa_invert>
 850:	88 2e       	mov	r8, r24
 852:	86 18       	sub	r8, r6
 854:	fb 2d       	mov	r31, r11
 856:	ff 77       	andi	r31, 0x7F	; 127
 858:	3f 2e       	mov	r3, r31
 85a:	36 fe       	sbrs	r3, 6
 85c:	0d c0       	rjmp	.+26     	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 85e:	23 2d       	mov	r18, r3
 860:	2e 7f       	andi	r18, 0xFE	; 254
 862:	a2 2e       	mov	r10, r18
 864:	89 14       	cp	r8, r9
 866:	58 f4       	brcc	.+22     	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
 868:	34 fe       	sbrs	r3, 4
 86a:	0b c0       	rjmp	.+22     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
 86c:	32 fc       	sbrc	r3, 2
 86e:	09 c0       	rjmp	.+18     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
 870:	83 2d       	mov	r24, r3
 872:	8e 7e       	andi	r24, 0xEE	; 238
 874:	a8 2e       	mov	r10, r24
 876:	05 c0       	rjmp	.+10     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
 878:	b8 2c       	mov	r11, r8
 87a:	a3 2c       	mov	r10, r3
 87c:	03 c0       	rjmp	.+6      	; 0x884 <__DATA_REGION_LENGTH__+0x84>
 87e:	b8 2c       	mov	r11, r8
 880:	01 c0       	rjmp	.+2      	; 0x884 <__DATA_REGION_LENGTH__+0x84>
 882:	b9 2c       	mov	r11, r9
 884:	a4 fe       	sbrs	r10, 4
 886:	0f c0       	rjmp	.+30     	; 0x8a6 <__DATA_REGION_LENGTH__+0xa6>
 888:	fe 01       	movw	r30, r28
 88a:	e8 0d       	add	r30, r8
 88c:	f1 1d       	adc	r31, r1
 88e:	80 81       	ld	r24, Z
 890:	80 33       	cpi	r24, 0x30	; 48
 892:	21 f4       	brne	.+8      	; 0x89c <__DATA_REGION_LENGTH__+0x9c>
 894:	9a 2d       	mov	r25, r10
 896:	99 7e       	andi	r25, 0xE9	; 233
 898:	a9 2e       	mov	r10, r25
 89a:	09 c0       	rjmp	.+18     	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 89c:	a2 fe       	sbrs	r10, 2
 89e:	06 c0       	rjmp	.+12     	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 8a0:	b3 94       	inc	r11
 8a2:	b3 94       	inc	r11
 8a4:	04 c0       	rjmp	.+8      	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 8a6:	8a 2d       	mov	r24, r10
 8a8:	86 78       	andi	r24, 0x86	; 134
 8aa:	09 f0       	breq	.+2      	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 8ac:	b3 94       	inc	r11
 8ae:	a3 fc       	sbrc	r10, 3
 8b0:	11 c0       	rjmp	.+34     	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 8b2:	a0 fe       	sbrs	r10, 0
 8b4:	06 c0       	rjmp	.+12     	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
 8b6:	b2 14       	cp	r11, r2
 8b8:	88 f4       	brcc	.+34     	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
 8ba:	28 0c       	add	r2, r8
 8bc:	92 2c       	mov	r9, r2
 8be:	9b 18       	sub	r9, r11
 8c0:	0e c0       	rjmp	.+28     	; 0x8de <__DATA_REGION_LENGTH__+0xde>
 8c2:	b2 14       	cp	r11, r2
 8c4:	60 f4       	brcc	.+24     	; 0x8de <__DATA_REGION_LENGTH__+0xde>
 8c6:	b6 01       	movw	r22, r12
 8c8:	80 e2       	ldi	r24, 0x20	; 32
 8ca:	90 e0       	ldi	r25, 0x00	; 0
 8cc:	0e 94 ce 04 	call	0x99c	; 0x99c <fputc>
 8d0:	b3 94       	inc	r11
 8d2:	f7 cf       	rjmp	.-18     	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
 8d4:	b2 14       	cp	r11, r2
 8d6:	18 f4       	brcc	.+6      	; 0x8de <__DATA_REGION_LENGTH__+0xde>
 8d8:	2b 18       	sub	r2, r11
 8da:	02 c0       	rjmp	.+4      	; 0x8e0 <__DATA_REGION_LENGTH__+0xe0>
 8dc:	98 2c       	mov	r9, r8
 8de:	21 2c       	mov	r2, r1
 8e0:	a4 fe       	sbrs	r10, 4
 8e2:	10 c0       	rjmp	.+32     	; 0x904 <__stack+0x5>
 8e4:	b6 01       	movw	r22, r12
 8e6:	80 e3       	ldi	r24, 0x30	; 48
 8e8:	90 e0       	ldi	r25, 0x00	; 0
 8ea:	0e 94 ce 04 	call	0x99c	; 0x99c <fputc>
 8ee:	a2 fe       	sbrs	r10, 2
 8f0:	17 c0       	rjmp	.+46     	; 0x920 <__stack+0x21>
 8f2:	a1 fc       	sbrc	r10, 1
 8f4:	03 c0       	rjmp	.+6      	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
 8f6:	88 e7       	ldi	r24, 0x78	; 120
 8f8:	90 e0       	ldi	r25, 0x00	; 0
 8fa:	02 c0       	rjmp	.+4      	; 0x900 <__stack+0x1>
 8fc:	88 e5       	ldi	r24, 0x58	; 88
 8fe:	90 e0       	ldi	r25, 0x00	; 0
 900:	b6 01       	movw	r22, r12
 902:	0c c0       	rjmp	.+24     	; 0x91c <__stack+0x1d>
 904:	8a 2d       	mov	r24, r10
 906:	86 78       	andi	r24, 0x86	; 134
 908:	59 f0       	breq	.+22     	; 0x920 <__stack+0x21>
 90a:	a1 fe       	sbrs	r10, 1
 90c:	02 c0       	rjmp	.+4      	; 0x912 <__stack+0x13>
 90e:	8b e2       	ldi	r24, 0x2B	; 43
 910:	01 c0       	rjmp	.+2      	; 0x914 <__stack+0x15>
 912:	80 e2       	ldi	r24, 0x20	; 32
 914:	a7 fc       	sbrc	r10, 7
 916:	8d e2       	ldi	r24, 0x2D	; 45
 918:	b6 01       	movw	r22, r12
 91a:	90 e0       	ldi	r25, 0x00	; 0
 91c:	0e 94 ce 04 	call	0x99c	; 0x99c <fputc>
 920:	89 14       	cp	r8, r9
 922:	38 f4       	brcc	.+14     	; 0x932 <__stack+0x33>
 924:	b6 01       	movw	r22, r12
 926:	80 e3       	ldi	r24, 0x30	; 48
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	0e 94 ce 04 	call	0x99c	; 0x99c <fputc>
 92e:	9a 94       	dec	r9
 930:	f7 cf       	rjmp	.-18     	; 0x920 <__stack+0x21>
 932:	8a 94       	dec	r8
 934:	f3 01       	movw	r30, r6
 936:	e8 0d       	add	r30, r8
 938:	f1 1d       	adc	r31, r1
 93a:	80 81       	ld	r24, Z
 93c:	b6 01       	movw	r22, r12
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	0e 94 ce 04 	call	0x99c	; 0x99c <fputc>
 944:	81 10       	cpse	r8, r1
 946:	f5 cf       	rjmp	.-22     	; 0x932 <__stack+0x33>
 948:	22 20       	and	r2, r2
 94a:	09 f4       	brne	.+2      	; 0x94e <__stack+0x4f>
 94c:	42 ce       	rjmp	.-892    	; 0x5d2 <vfprintf+0x24>
 94e:	b6 01       	movw	r22, r12
 950:	80 e2       	ldi	r24, 0x20	; 32
 952:	90 e0       	ldi	r25, 0x00	; 0
 954:	0e 94 ce 04 	call	0x99c	; 0x99c <fputc>
 958:	2a 94       	dec	r2
 95a:	f6 cf       	rjmp	.-20     	; 0x948 <__stack+0x49>
 95c:	f6 01       	movw	r30, r12
 95e:	86 81       	ldd	r24, Z+6	; 0x06
 960:	97 81       	ldd	r25, Z+7	; 0x07
 962:	02 c0       	rjmp	.+4      	; 0x968 <__stack+0x69>
 964:	8f ef       	ldi	r24, 0xFF	; 255
 966:	9f ef       	ldi	r25, 0xFF	; 255
 968:	2b 96       	adiw	r28, 0x0b	; 11
 96a:	e2 e1       	ldi	r30, 0x12	; 18
 96c:	0c 94 84 05 	jmp	0xb08	; 0xb08 <__epilogue_restores__>

00000970 <strnlen_P>:
 970:	fc 01       	movw	r30, r24
 972:	05 90       	lpm	r0, Z+
 974:	61 50       	subi	r22, 0x01	; 1
 976:	70 40       	sbci	r23, 0x00	; 0
 978:	01 10       	cpse	r0, r1
 97a:	d8 f7       	brcc	.-10     	; 0x972 <strnlen_P+0x2>
 97c:	80 95       	com	r24
 97e:	90 95       	com	r25
 980:	8e 0f       	add	r24, r30
 982:	9f 1f       	adc	r25, r31
 984:	08 95       	ret

00000986 <strnlen>:
 986:	fc 01       	movw	r30, r24
 988:	61 50       	subi	r22, 0x01	; 1
 98a:	70 40       	sbci	r23, 0x00	; 0
 98c:	01 90       	ld	r0, Z+
 98e:	01 10       	cpse	r0, r1
 990:	d8 f7       	brcc	.-10     	; 0x988 <strnlen+0x2>
 992:	80 95       	com	r24
 994:	90 95       	com	r25
 996:	8e 0f       	add	r24, r30
 998:	9f 1f       	adc	r25, r31
 99a:	08 95       	ret

0000099c <fputc>:
 99c:	0f 93       	push	r16
 99e:	1f 93       	push	r17
 9a0:	cf 93       	push	r28
 9a2:	df 93       	push	r29
 9a4:	fb 01       	movw	r30, r22
 9a6:	23 81       	ldd	r18, Z+3	; 0x03
 9a8:	21 fd       	sbrc	r18, 1
 9aa:	03 c0       	rjmp	.+6      	; 0x9b2 <fputc+0x16>
 9ac:	8f ef       	ldi	r24, 0xFF	; 255
 9ae:	9f ef       	ldi	r25, 0xFF	; 255
 9b0:	2c c0       	rjmp	.+88     	; 0xa0a <fputc+0x6e>
 9b2:	22 ff       	sbrs	r18, 2
 9b4:	16 c0       	rjmp	.+44     	; 0x9e2 <fputc+0x46>
 9b6:	46 81       	ldd	r20, Z+6	; 0x06
 9b8:	57 81       	ldd	r21, Z+7	; 0x07
 9ba:	24 81       	ldd	r18, Z+4	; 0x04
 9bc:	35 81       	ldd	r19, Z+5	; 0x05
 9be:	42 17       	cp	r20, r18
 9c0:	53 07       	cpc	r21, r19
 9c2:	44 f4       	brge	.+16     	; 0x9d4 <fputc+0x38>
 9c4:	a0 81       	ld	r26, Z
 9c6:	b1 81       	ldd	r27, Z+1	; 0x01
 9c8:	9d 01       	movw	r18, r26
 9ca:	2f 5f       	subi	r18, 0xFF	; 255
 9cc:	3f 4f       	sbci	r19, 0xFF	; 255
 9ce:	31 83       	std	Z+1, r19	; 0x01
 9d0:	20 83       	st	Z, r18
 9d2:	8c 93       	st	X, r24
 9d4:	26 81       	ldd	r18, Z+6	; 0x06
 9d6:	37 81       	ldd	r19, Z+7	; 0x07
 9d8:	2f 5f       	subi	r18, 0xFF	; 255
 9da:	3f 4f       	sbci	r19, 0xFF	; 255
 9dc:	37 83       	std	Z+7, r19	; 0x07
 9de:	26 83       	std	Z+6, r18	; 0x06
 9e0:	14 c0       	rjmp	.+40     	; 0xa0a <fputc+0x6e>
 9e2:	8b 01       	movw	r16, r22
 9e4:	ec 01       	movw	r28, r24
 9e6:	fb 01       	movw	r30, r22
 9e8:	00 84       	ldd	r0, Z+8	; 0x08
 9ea:	f1 85       	ldd	r31, Z+9	; 0x09
 9ec:	e0 2d       	mov	r30, r0
 9ee:	09 95       	icall
 9f0:	89 2b       	or	r24, r25
 9f2:	e1 f6       	brne	.-72     	; 0x9ac <fputc+0x10>
 9f4:	d8 01       	movw	r26, r16
 9f6:	16 96       	adiw	r26, 0x06	; 6
 9f8:	8d 91       	ld	r24, X+
 9fa:	9c 91       	ld	r25, X
 9fc:	17 97       	sbiw	r26, 0x07	; 7
 9fe:	01 96       	adiw	r24, 0x01	; 1
 a00:	17 96       	adiw	r26, 0x07	; 7
 a02:	9c 93       	st	X, r25
 a04:	8e 93       	st	-X, r24
 a06:	16 97       	sbiw	r26, 0x06	; 6
 a08:	ce 01       	movw	r24, r28
 a0a:	df 91       	pop	r29
 a0c:	cf 91       	pop	r28
 a0e:	1f 91       	pop	r17
 a10:	0f 91       	pop	r16
 a12:	08 95       	ret

00000a14 <__ultoa_invert>:
 a14:	fa 01       	movw	r30, r20
 a16:	aa 27       	eor	r26, r26
 a18:	28 30       	cpi	r18, 0x08	; 8
 a1a:	51 f1       	breq	.+84     	; 0xa70 <__ultoa_invert+0x5c>
 a1c:	20 31       	cpi	r18, 0x10	; 16
 a1e:	81 f1       	breq	.+96     	; 0xa80 <__ultoa_invert+0x6c>
 a20:	e8 94       	clt
 a22:	6f 93       	push	r22
 a24:	6e 7f       	andi	r22, 0xFE	; 254
 a26:	6e 5f       	subi	r22, 0xFE	; 254
 a28:	7f 4f       	sbci	r23, 0xFF	; 255
 a2a:	8f 4f       	sbci	r24, 0xFF	; 255
 a2c:	9f 4f       	sbci	r25, 0xFF	; 255
 a2e:	af 4f       	sbci	r26, 0xFF	; 255
 a30:	b1 e0       	ldi	r27, 0x01	; 1
 a32:	3e d0       	rcall	.+124    	; 0xab0 <__ultoa_invert+0x9c>
 a34:	b4 e0       	ldi	r27, 0x04	; 4
 a36:	3c d0       	rcall	.+120    	; 0xab0 <__ultoa_invert+0x9c>
 a38:	67 0f       	add	r22, r23
 a3a:	78 1f       	adc	r23, r24
 a3c:	89 1f       	adc	r24, r25
 a3e:	9a 1f       	adc	r25, r26
 a40:	a1 1d       	adc	r26, r1
 a42:	68 0f       	add	r22, r24
 a44:	79 1f       	adc	r23, r25
 a46:	8a 1f       	adc	r24, r26
 a48:	91 1d       	adc	r25, r1
 a4a:	a1 1d       	adc	r26, r1
 a4c:	6a 0f       	add	r22, r26
 a4e:	71 1d       	adc	r23, r1
 a50:	81 1d       	adc	r24, r1
 a52:	91 1d       	adc	r25, r1
 a54:	a1 1d       	adc	r26, r1
 a56:	20 d0       	rcall	.+64     	; 0xa98 <__ultoa_invert+0x84>
 a58:	09 f4       	brne	.+2      	; 0xa5c <__ultoa_invert+0x48>
 a5a:	68 94       	set
 a5c:	3f 91       	pop	r19
 a5e:	2a e0       	ldi	r18, 0x0A	; 10
 a60:	26 9f       	mul	r18, r22
 a62:	11 24       	eor	r1, r1
 a64:	30 19       	sub	r19, r0
 a66:	30 5d       	subi	r19, 0xD0	; 208
 a68:	31 93       	st	Z+, r19
 a6a:	de f6       	brtc	.-74     	; 0xa22 <__ultoa_invert+0xe>
 a6c:	cf 01       	movw	r24, r30
 a6e:	08 95       	ret
 a70:	46 2f       	mov	r20, r22
 a72:	47 70       	andi	r20, 0x07	; 7
 a74:	40 5d       	subi	r20, 0xD0	; 208
 a76:	41 93       	st	Z+, r20
 a78:	b3 e0       	ldi	r27, 0x03	; 3
 a7a:	0f d0       	rcall	.+30     	; 0xa9a <__ultoa_invert+0x86>
 a7c:	c9 f7       	brne	.-14     	; 0xa70 <__ultoa_invert+0x5c>
 a7e:	f6 cf       	rjmp	.-20     	; 0xa6c <__ultoa_invert+0x58>
 a80:	46 2f       	mov	r20, r22
 a82:	4f 70       	andi	r20, 0x0F	; 15
 a84:	40 5d       	subi	r20, 0xD0	; 208
 a86:	4a 33       	cpi	r20, 0x3A	; 58
 a88:	18 f0       	brcs	.+6      	; 0xa90 <__ultoa_invert+0x7c>
 a8a:	49 5d       	subi	r20, 0xD9	; 217
 a8c:	31 fd       	sbrc	r19, 1
 a8e:	40 52       	subi	r20, 0x20	; 32
 a90:	41 93       	st	Z+, r20
 a92:	02 d0       	rcall	.+4      	; 0xa98 <__ultoa_invert+0x84>
 a94:	a9 f7       	brne	.-22     	; 0xa80 <__ultoa_invert+0x6c>
 a96:	ea cf       	rjmp	.-44     	; 0xa6c <__ultoa_invert+0x58>
 a98:	b4 e0       	ldi	r27, 0x04	; 4
 a9a:	a6 95       	lsr	r26
 a9c:	97 95       	ror	r25
 a9e:	87 95       	ror	r24
 aa0:	77 95       	ror	r23
 aa2:	67 95       	ror	r22
 aa4:	ba 95       	dec	r27
 aa6:	c9 f7       	brne	.-14     	; 0xa9a <__ultoa_invert+0x86>
 aa8:	00 97       	sbiw	r24, 0x00	; 0
 aaa:	61 05       	cpc	r22, r1
 aac:	71 05       	cpc	r23, r1
 aae:	08 95       	ret
 ab0:	9b 01       	movw	r18, r22
 ab2:	ac 01       	movw	r20, r24
 ab4:	0a 2e       	mov	r0, r26
 ab6:	06 94       	lsr	r0
 ab8:	57 95       	ror	r21
 aba:	47 95       	ror	r20
 abc:	37 95       	ror	r19
 abe:	27 95       	ror	r18
 ac0:	ba 95       	dec	r27
 ac2:	c9 f7       	brne	.-14     	; 0xab6 <__ultoa_invert+0xa2>
 ac4:	62 0f       	add	r22, r18
 ac6:	73 1f       	adc	r23, r19
 ac8:	84 1f       	adc	r24, r20
 aca:	95 1f       	adc	r25, r21
 acc:	a0 1d       	adc	r26, r0
 ace:	08 95       	ret

00000ad0 <__prologue_saves__>:
 ad0:	2f 92       	push	r2
 ad2:	3f 92       	push	r3
 ad4:	4f 92       	push	r4
 ad6:	5f 92       	push	r5
 ad8:	6f 92       	push	r6
 ada:	7f 92       	push	r7
 adc:	8f 92       	push	r8
 ade:	9f 92       	push	r9
 ae0:	af 92       	push	r10
 ae2:	bf 92       	push	r11
 ae4:	cf 92       	push	r12
 ae6:	df 92       	push	r13
 ae8:	ef 92       	push	r14
 aea:	ff 92       	push	r15
 aec:	0f 93       	push	r16
 aee:	1f 93       	push	r17
 af0:	cf 93       	push	r28
 af2:	df 93       	push	r29
 af4:	cd b7       	in	r28, 0x3d	; 61
 af6:	de b7       	in	r29, 0x3e	; 62
 af8:	ca 1b       	sub	r28, r26
 afa:	db 0b       	sbc	r29, r27
 afc:	0f b6       	in	r0, 0x3f	; 63
 afe:	f8 94       	cli
 b00:	de bf       	out	0x3e, r29	; 62
 b02:	0f be       	out	0x3f, r0	; 63
 b04:	cd bf       	out	0x3d, r28	; 61
 b06:	09 94       	ijmp

00000b08 <__epilogue_restores__>:
 b08:	2a 88       	ldd	r2, Y+18	; 0x12
 b0a:	39 88       	ldd	r3, Y+17	; 0x11
 b0c:	48 88       	ldd	r4, Y+16	; 0x10
 b0e:	5f 84       	ldd	r5, Y+15	; 0x0f
 b10:	6e 84       	ldd	r6, Y+14	; 0x0e
 b12:	7d 84       	ldd	r7, Y+13	; 0x0d
 b14:	8c 84       	ldd	r8, Y+12	; 0x0c
 b16:	9b 84       	ldd	r9, Y+11	; 0x0b
 b18:	aa 84       	ldd	r10, Y+10	; 0x0a
 b1a:	b9 84       	ldd	r11, Y+9	; 0x09
 b1c:	c8 84       	ldd	r12, Y+8	; 0x08
 b1e:	df 80       	ldd	r13, Y+7	; 0x07
 b20:	ee 80       	ldd	r14, Y+6	; 0x06
 b22:	fd 80       	ldd	r15, Y+5	; 0x05
 b24:	0c 81       	ldd	r16, Y+4	; 0x04
 b26:	1b 81       	ldd	r17, Y+3	; 0x03
 b28:	aa 81       	ldd	r26, Y+2	; 0x02
 b2a:	b9 81       	ldd	r27, Y+1	; 0x01
 b2c:	ce 0f       	add	r28, r30
 b2e:	d1 1d       	adc	r29, r1
 b30:	0f b6       	in	r0, 0x3f	; 63
 b32:	f8 94       	cli
 b34:	de bf       	out	0x3e, r29	; 62
 b36:	0f be       	out	0x3f, r0	; 63
 b38:	cd bf       	out	0x3d, r28	; 61
 b3a:	ed 01       	movw	r28, r26
 b3c:	08 95       	ret

00000b3e <_exit>:
 b3e:	f8 94       	cli

00000b40 <__stop_program>:
 b40:	ff cf       	rjmp	.-2      	; 0xb40 <__stop_program>
