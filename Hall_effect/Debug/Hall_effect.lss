
Hall_effect.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000008b0  00000944  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008b0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  0080010c  0080010c  00000950  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000950  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000009ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d30  00000000  00000000  00000a74  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000929  00000000  00000000  000017a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000550  00000000  00000000  000020cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f8  00000000  00000000  00002620  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a7  00000000  00000000  00002718  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000038e  00000000  00000000  00002bbf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00002f4d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 eb       	ldi	r30, 0xB0	; 176
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 30       	cpi	r26, 0x0C	; 12
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e0       	ldi	r26, 0x0C	; 12
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 31       	cpi	r26, 0x10	; 16
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b5 00 	call	0x16a	; 0x16a <main>
  9e:	0c 94 56 04 	jmp	0x8ac	; 0x8ac <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <Initialization>:
void Initialization () 
{
	
	//PISO Init 
	
	DDRB |= (1U<<DDB0); // latch - Output
  a6:	84 b1       	in	r24, 0x04	; 4
  a8:	81 60       	ori	r24, 0x01	; 1
  aa:	84 b9       	out	0x04, r24	; 4
	DDRD |= (1U<<DDD7); // Clock - Output
  ac:	8a b1       	in	r24, 0x0a	; 10
  ae:	80 68       	ori	r24, 0x80	; 128
  b0:	8a b9       	out	0x0a, r24	; 10
	DDRB |= (1U<<DDB2); // ClockINH - Output
  b2:	84 b1       	in	r24, 0x04	; 4
  b4:	84 60       	ori	r24, 0x04	; 4
  b6:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1U<<DDB1); // DataPin - Input
  b8:	84 b1       	in	r24, 0x04	; 4
  ba:	8d 7f       	andi	r24, 0xFD	; 253
  bc:	84 b9       	out	0x04, r24	; 4
  be:	08 95       	ret

000000c0 <squareprev>:
int Row1 =10; 
uint8_t rows[4] = {0} ;  
int test = 0; 

void  squareprev()
{
  c0:	cf 92       	push	r12
  c2:	df 92       	push	r13
  c4:	ef 92       	push	r14
  c6:	ff 92       	push	r15
  c8:	0f 93       	push	r16
  ca:	1f 93       	push	r17
  cc:	cf 93       	push	r28
  ce:	df 93       	push	r29
  d0:	cd b7       	in	r28, 0x3d	; 61
  d2:	de b7       	in	r29, 0x3e	; 62
  d4:	69 97       	sbiw	r28, 0x19	; 25
  d6:	0f b6       	in	r0, 0x3f	; 63
  d8:	f8 94       	cli
  da:	de bf       	out	0x3e, r29	; 62
  dc:	0f be       	out	0x3f, r0	; 63
  de:	cd bf       	out	0x3d, r28	; 61
	char board[25];
	int i,j;
	
	for (i=0;i<4;i++)
  e0:	e1 2c       	mov	r14, r1
  e2:	f1 2c       	mov	r15, r1
  e4:	2f c0       	rjmp	.+94     	; 0x144 <squareprev+0x84>
	{
		for (j=0;j<8;j++)
		{
				if((rows[i] & (0x1<<j) ) != 0 )
  e6:	f7 01       	movw	r30, r14
  e8:	e4 5f       	subi	r30, 0xF4	; 244
  ea:	fe 4f       	sbci	r31, 0xFE	; 254
  ec:	80 81       	ld	r24, Z
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	00 2e       	mov	r0, r16
  f2:	02 c0       	rjmp	.+4      	; 0xf8 <squareprev+0x38>
  f4:	95 95       	asr	r25
  f6:	87 95       	ror	r24
  f8:	0a 94       	dec	r0
  fa:	e2 f7       	brpl	.-8      	; 0xf4 <squareprev+0x34>
  fc:	80 ff       	sbrs	r24, 0
  fe:	17 c0       	rjmp	.+46     	; 0x12e <squareprev+0x6e>
				{
					sprintf(board," %d,%d \n\r ",i,j);
 100:	1f 93       	push	r17
 102:	0f 93       	push	r16
 104:	ff 92       	push	r15
 106:	ef 92       	push	r14
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	91 e0       	ldi	r25, 0x01	; 1
 10c:	9f 93       	push	r25
 10e:	8f 93       	push	r24
 110:	ce 01       	movw	r24, r28
 112:	01 96       	adiw	r24, 0x01	; 1
 114:	6c 01       	movw	r12, r24
 116:	9f 93       	push	r25
 118:	8f 93       	push	r24
 11a:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <sprintf>
					UART_putstring(board);
 11e:	c6 01       	movw	r24, r12
 120:	0e 94 5f 01 	call	0x2be	; 0x2be <UART_putstring>
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	f8 94       	cli
 128:	de bf       	out	0x3e, r29	; 62
 12a:	0f be       	out	0x3f, r0	; 63
 12c:	cd bf       	out	0x3d, r28	; 61
	char board[25];
	int i,j;
	
	for (i=0;i<4;i++)
	{
		for (j=0;j<8;j++)
 12e:	0f 5f       	subi	r16, 0xFF	; 255
 130:	1f 4f       	sbci	r17, 0xFF	; 255
 132:	02 c0       	rjmp	.+4      	; 0x138 <squareprev+0x78>
 134:	00 e0       	ldi	r16, 0x00	; 0
 136:	10 e0       	ldi	r17, 0x00	; 0
 138:	08 30       	cpi	r16, 0x08	; 8
 13a:	11 05       	cpc	r17, r1
 13c:	a4 f2       	brlt	.-88     	; 0xe6 <squareprev+0x26>
void  squareprev()
{
	char board[25];
	int i,j;
	
	for (i=0;i<4;i++)
 13e:	9f ef       	ldi	r25, 0xFF	; 255
 140:	e9 1a       	sub	r14, r25
 142:	f9 0a       	sbc	r15, r25
 144:	84 e0       	ldi	r24, 0x04	; 4
 146:	e8 16       	cp	r14, r24
 148:	f1 04       	cpc	r15, r1
 14a:	a4 f3       	brlt	.-24     	; 0x134 <squareprev+0x74>
					sprintf(board," %d,%d \n\r ",i,j);
					UART_putstring(board);
				}
		}
	}
}
 14c:	69 96       	adiw	r28, 0x19	; 25
 14e:	0f b6       	in	r0, 0x3f	; 63
 150:	f8 94       	cli
 152:	de bf       	out	0x3e, r29	; 62
 154:	0f be       	out	0x3f, r0	; 63
 156:	cd bf       	out	0x3d, r28	; 61
 158:	df 91       	pop	r29
 15a:	cf 91       	pop	r28
 15c:	1f 91       	pop	r17
 15e:	0f 91       	pop	r16
 160:	ff 90       	pop	r15
 162:	ef 90       	pop	r14
 164:	df 90       	pop	r13
 166:	cf 90       	pop	r12
 168:	08 95       	ret

0000016a <main>:

int main(void)
{
   Initialization(); 
 16a:	0e 94 53 00 	call	0xa6	; 0xa6 <Initialization>
    UART_init(BAUD_PRESCALER);
 16e:	87 e6       	ldi	r24, 0x67	; 103
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	0e 94 49 01 	call	0x292	; 0x292 <UART_init>
    while (1) 
    {
// 	
	latch(latchPin,clockPin);
 176:	67 e0       	ldi	r22, 0x07	; 7
 178:	70 e0       	ldi	r23, 0x00	; 0
 17a:	80 e0       	ldi	r24, 0x00	; 0
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	0e 94 20 01 	call	0x240	; 0x240 <latch>
	
	rows[4] = shiftIn(dataPin,clockPin);
 182:	67 e0       	ldi	r22, 0x07	; 7
 184:	70 e0       	ldi	r23, 0x00	; 0
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <shiftIn>
 18e:	cc e0       	ldi	r28, 0x0C	; 12
 190:	d1 e0       	ldi	r29, 0x01	; 1
 192:	8c 83       	std	Y+4, r24	; 0x04
	rows[3] = shiftIn(dataPin,clockPin);
 194:	67 e0       	ldi	r22, 0x07	; 7
 196:	70 e0       	ldi	r23, 0x00	; 0
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <shiftIn>
 1a0:	8b 83       	std	Y+3, r24	; 0x03
	rows[2] = shiftIn(dataPin,clockPin);
 1a2:	67 e0       	ldi	r22, 0x07	; 7
 1a4:	70 e0       	ldi	r23, 0x00	; 0
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <shiftIn>
 1ae:	8a 83       	std	Y+2, r24	; 0x02
	rows[1] = shiftIn(dataPin,clockPin);
 1b0:	67 e0       	ldi	r22, 0x07	; 7
 1b2:	70 e0       	ldi	r23, 0x00	; 0
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <shiftIn>
 1bc:	89 83       	std	Y+1, r24	; 0x01
	sprintf(String4," %x\n\r  ",Row1);
	UART_putstring(String4);
	
	_delay_ms(200);
	*/ 
	squareprev();
 1be:	0e 94 60 00 	call	0xc0	; 0xc0 <squareprev>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c2:	2f ef       	ldi	r18, 0xFF	; 255
 1c4:	83 ec       	ldi	r24, 0xC3	; 195
 1c6:	99 e0       	ldi	r25, 0x09	; 9
 1c8:	21 50       	subi	r18, 0x01	; 1
 1ca:	80 40       	sbci	r24, 0x00	; 0
 1cc:	90 40       	sbci	r25, 0x00	; 0
 1ce:	e1 f7       	brne	.-8      	; 0x1c8 <main+0x5e>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <main+0x68>
 1d2:	00 00       	nop
 1d4:	d0 cf       	rjmp	.-96     	; 0x176 <main+0xc>

000001d6 <shiftIn>:
char abc[10]= {0};
char space = '\n';


uint8_t shiftIn(int mydataPin, int myclockPin) 
{
 1d6:	a8 2f       	mov	r26, r24
	uint8_t myDataIn = 0; 
	uint8_t temp = 0; 
	
	for (int i=0 ; i<8 ; i++)
 1d8:	e0 e0       	ldi	r30, 0x00	; 0
 1da:	f0 e0       	ldi	r31, 0x00	; 0
char space = '\n';


uint8_t shiftIn(int mydataPin, int myclockPin) 
{
	uint8_t myDataIn = 0; 
 1dc:	80 e0       	ldi	r24, 0x00	; 0
	uint8_t temp = 0; 
	
	for (int i=0 ; i<8 ; i++)
 1de:	2c c0       	rjmp	.+88     	; 0x238 <shiftIn+0x62>
		{
			 PORTD &= ~(1U<<myclockPin);
 1e0:	9b b1       	in	r25, 0x0b	; 11
 1e2:	21 e0       	ldi	r18, 0x01	; 1
 1e4:	30 e0       	ldi	r19, 0x00	; 0
 1e6:	a9 01       	movw	r20, r18
 1e8:	06 2e       	mov	r0, r22
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <shiftIn+0x1a>
 1ec:	44 0f       	add	r20, r20
 1ee:	55 1f       	adc	r21, r21
 1f0:	0a 94       	dec	r0
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <shiftIn+0x16>
 1f4:	74 2f       	mov	r23, r20
 1f6:	70 95       	com	r23
 1f8:	97 23       	and	r25, r23
 1fa:	9b b9       	out	0x0b, r25	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1fc:	95 e1       	ldi	r25, 0x15	; 21
 1fe:	9a 95       	dec	r25
 200:	f1 f7       	brne	.-4      	; 0x1fe <shiftIn+0x28>
 202:	00 00       	nop
			_delay_us(4);
			 temp = (PINB & (1<<mydataPin));
 204:	93 b1       	in	r25, 0x03	; 3
 206:	0a 2e       	mov	r0, r26
 208:	02 c0       	rjmp	.+4      	; 0x20e <shiftIn+0x38>
 20a:	22 0f       	add	r18, r18
 20c:	33 1f       	adc	r19, r19
 20e:	0a 94       	dec	r0
 210:	e2 f7       	brpl	.-8      	; 0x20a <shiftIn+0x34>
 212:	29 23       	and	r18, r25
// 			 sprintf(abc,"%d\t",temp);
// 			 UART_putstring(abc);
			 
			 if (!temp)
 214:	49 f4       	brne	.+18     	; 0x228 <shiftIn+0x52>
			 {
				 myDataIn = myDataIn | (1<<i); 
 216:	21 e0       	ldi	r18, 0x01	; 1
 218:	30 e0       	ldi	r19, 0x00	; 0
 21a:	0e 2e       	mov	r0, r30
 21c:	02 c0       	rjmp	.+4      	; 0x222 <shiftIn+0x4c>
 21e:	22 0f       	add	r18, r18
 220:	33 1f       	adc	r19, r19
 222:	0a 94       	dec	r0
 224:	e2 f7       	brpl	.-8      	; 0x21e <shiftIn+0x48>
 226:	82 2b       	or	r24, r18
				
			 } 
			 
		PORTD |= (1U<< myclockPin); 
 228:	9b b1       	in	r25, 0x0b	; 11
 22a:	49 2b       	or	r20, r25
 22c:	4b b9       	out	0x0b, r20	; 11
 22e:	95 e1       	ldi	r25, 0x15	; 21
 230:	9a 95       	dec	r25
 232:	f1 f7       	brne	.-4      	; 0x230 <shiftIn+0x5a>
 234:	00 00       	nop
uint8_t shiftIn(int mydataPin, int myclockPin) 
{
	uint8_t myDataIn = 0; 
	uint8_t temp = 0; 
	
	for (int i=0 ; i<8 ; i++)
 236:	31 96       	adiw	r30, 0x01	; 1
 238:	e8 30       	cpi	r30, 0x08	; 8
 23a:	f1 05       	cpc	r31, r1
 23c:	8c f2       	brlt	.-94     	; 0x1e0 <shiftIn+0xa>
			 
		}
	/* UART_send(space);*/
	  return myDataIn; 
	  
}
 23e:	08 95       	ret

00000240 <latch>:
	
void latch( int mylatchPin, int myclockPin)
{
	
	PORTD &= ~(1U<< myclockPin);
 240:	4b b1       	in	r20, 0x0b	; 11
 242:	21 e0       	ldi	r18, 0x01	; 1
 244:	30 e0       	ldi	r19, 0x00	; 0
 246:	f9 01       	movw	r30, r18
 248:	02 c0       	rjmp	.+4      	; 0x24e <latch+0xe>
 24a:	ee 0f       	add	r30, r30
 24c:	ff 1f       	adc	r31, r31
 24e:	6a 95       	dec	r22
 250:	e2 f7       	brpl	.-8      	; 0x24a <latch+0xa>
 252:	9e 2f       	mov	r25, r30
 254:	90 95       	com	r25
 256:	94 23       	and	r25, r20
 258:	9b b9       	out	0x0b, r25	; 11
 25a:	fa e6       	ldi	r31, 0x6A	; 106
 25c:	fa 95       	dec	r31
 25e:	f1 f7       	brne	.-4      	; 0x25c <latch+0x1c>
 260:	00 c0       	rjmp	.+0      	; 0x262 <latch+0x22>
	_delay_us(20);
	PORTB &= ~(1U<<mylatchPin);  // Read Parallel
 262:	45 b1       	in	r20, 0x05	; 5
 264:	b9 01       	movw	r22, r18
 266:	02 c0       	rjmp	.+4      	; 0x26c <latch+0x2c>
 268:	66 0f       	add	r22, r22
 26a:	77 1f       	adc	r23, r23
 26c:	8a 95       	dec	r24
 26e:	e2 f7       	brpl	.-8      	; 0x268 <latch+0x28>
 270:	cb 01       	movw	r24, r22
 272:	96 2f       	mov	r25, r22
 274:	90 95       	com	r25
 276:	94 23       	and	r25, r20
 278:	95 b9       	out	0x05, r25	; 5
 27a:	7a e6       	ldi	r23, 0x6A	; 106
 27c:	7a 95       	dec	r23
 27e:	f1 f7       	brne	.-4      	; 0x27c <latch+0x3c>
 280:	00 c0       	rjmp	.+0      	; 0x282 <latch+0x42>
	_delay_us(20);
	PORTB |= (1U<<mylatchPin); // Serial Out
 282:	95 b1       	in	r25, 0x05	; 5
 284:	89 2b       	or	r24, r25
 286:	85 b9       	out	0x05, r24	; 5
 288:	8a e6       	ldi	r24, 0x6A	; 106
 28a:	8a 95       	dec	r24
 28c:	f1 f7       	brne	.-4      	; 0x28a <latch+0x4a>
 28e:	00 c0       	rjmp	.+0      	; 0x290 <latch+0x50>
 290:	08 95       	ret

00000292 <UART_init>:

void UART_init(int BAUD_PRESCALER)
{
	
	/*Set baud rate */
	UBRR0H = (unsigned char)(BAUD_PRESCALER>>8);
 292:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)BAUD_PRESCALER;
 296:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 29a:	88 e1       	ldi	r24, 0x18	; 24
 29c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	/* Set frame format: 2 stop bits, 8 data bits */
	UCSR0C = (1<<UCSZ01) | (1<<UCSZ00); // 8 data bits
 2a0:	e2 ec       	ldi	r30, 0xC2	; 194
 2a2:	f0 e0       	ldi	r31, 0x00	; 0
 2a4:	86 e0       	ldi	r24, 0x06	; 6
 2a6:	80 83       	st	Z, r24
	UCSR0C |= (1<<USBS0); // 2 stop bits
 2a8:	80 81       	ld	r24, Z
 2aa:	88 60       	ori	r24, 0x08	; 8
 2ac:	80 83       	st	Z, r24
 2ae:	08 95       	ret

000002b0 <UART_send>:
}

void UART_send(unsigned char data)
{
	// Wait for empty transmit buffer
	while(!(UCSR0A & (1<<UDRE0)));
 2b0:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 2b4:	95 ff       	sbrs	r25, 5
 2b6:	fc cf       	rjmp	.-8      	; 0x2b0 <UART_send>
	// Put data into buffer and send data
	UDR0 = data;
 2b8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 2bc:	08 95       	ret

000002be <UART_putstring>:
	
}

void UART_putstring(char* StringPtr)
{
 2be:	cf 93       	push	r28
 2c0:	df 93       	push	r29
 2c2:	ec 01       	movw	r28, r24
	while(*StringPtr != 0x00)
 2c4:	03 c0       	rjmp	.+6      	; 0x2cc <UART_putstring+0xe>
	{
		UART_send(*StringPtr);
 2c6:	0e 94 58 01 	call	0x2b0	; 0x2b0 <UART_send>
		StringPtr++;
 2ca:	21 96       	adiw	r28, 0x01	; 1
	
}

void UART_putstring(char* StringPtr)
{
	while(*StringPtr != 0x00)
 2cc:	88 81       	ld	r24, Y
 2ce:	81 11       	cpse	r24, r1
 2d0:	fa cf       	rjmp	.-12     	; 0x2c6 <UART_putstring+0x8>
	{
		UART_send(*StringPtr);
		StringPtr++;
	}
 2d2:	df 91       	pop	r29
 2d4:	cf 91       	pop	r28
 2d6:	08 95       	ret

000002d8 <sprintf>:
 2d8:	ae e0       	ldi	r26, 0x0E	; 14
 2da:	b0 e0       	ldi	r27, 0x00	; 0
 2dc:	e2 e7       	ldi	r30, 0x72	; 114
 2de:	f1 e0       	ldi	r31, 0x01	; 1
 2e0:	0c 94 2d 04 	jmp	0x85a	; 0x85a <__prologue_saves__+0x1c>
 2e4:	0d 89       	ldd	r16, Y+21	; 0x15
 2e6:	1e 89       	ldd	r17, Y+22	; 0x16
 2e8:	86 e0       	ldi	r24, 0x06	; 6
 2ea:	8c 83       	std	Y+4, r24	; 0x04
 2ec:	1a 83       	std	Y+2, r17	; 0x02
 2ee:	09 83       	std	Y+1, r16	; 0x01
 2f0:	8f ef       	ldi	r24, 0xFF	; 255
 2f2:	9f e7       	ldi	r25, 0x7F	; 127
 2f4:	9e 83       	std	Y+6, r25	; 0x06
 2f6:	8d 83       	std	Y+5, r24	; 0x05
 2f8:	ae 01       	movw	r20, r28
 2fa:	47 5e       	subi	r20, 0xE7	; 231
 2fc:	5f 4f       	sbci	r21, 0xFF	; 255
 2fe:	6f 89       	ldd	r22, Y+23	; 0x17
 300:	78 8d       	ldd	r23, Y+24	; 0x18
 302:	ce 01       	movw	r24, r28
 304:	01 96       	adiw	r24, 0x01	; 1
 306:	0e 94 8e 01 	call	0x31c	; 0x31c <vfprintf>
 30a:	ef 81       	ldd	r30, Y+7	; 0x07
 30c:	f8 85       	ldd	r31, Y+8	; 0x08
 30e:	e0 0f       	add	r30, r16
 310:	f1 1f       	adc	r31, r17
 312:	10 82       	st	Z, r1
 314:	2e 96       	adiw	r28, 0x0e	; 14
 316:	e4 e0       	ldi	r30, 0x04	; 4
 318:	0c 94 49 04 	jmp	0x892	; 0x892 <__epilogue_restores__+0x1c>

0000031c <vfprintf>:
 31c:	ab e0       	ldi	r26, 0x0B	; 11
 31e:	b0 e0       	ldi	r27, 0x00	; 0
 320:	e4 e9       	ldi	r30, 0x94	; 148
 322:	f1 e0       	ldi	r31, 0x01	; 1
 324:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__prologue_saves__>
 328:	6c 01       	movw	r12, r24
 32a:	7b 01       	movw	r14, r22
 32c:	8a 01       	movw	r16, r20
 32e:	fc 01       	movw	r30, r24
 330:	17 82       	std	Z+7, r1	; 0x07
 332:	16 82       	std	Z+6, r1	; 0x06
 334:	83 81       	ldd	r24, Z+3	; 0x03
 336:	81 ff       	sbrs	r24, 1
 338:	cc c1       	rjmp	.+920    	; 0x6d2 <__EEPROM_REGION_LENGTH__+0x2d2>
 33a:	ce 01       	movw	r24, r28
 33c:	01 96       	adiw	r24, 0x01	; 1
 33e:	3c 01       	movw	r6, r24
 340:	f6 01       	movw	r30, r12
 342:	93 81       	ldd	r25, Z+3	; 0x03
 344:	f7 01       	movw	r30, r14
 346:	93 fd       	sbrc	r25, 3
 348:	85 91       	lpm	r24, Z+
 34a:	93 ff       	sbrs	r25, 3
 34c:	81 91       	ld	r24, Z+
 34e:	7f 01       	movw	r14, r30
 350:	88 23       	and	r24, r24
 352:	09 f4       	brne	.+2      	; 0x356 <vfprintf+0x3a>
 354:	ba c1       	rjmp	.+884    	; 0x6ca <__EEPROM_REGION_LENGTH__+0x2ca>
 356:	85 32       	cpi	r24, 0x25	; 37
 358:	39 f4       	brne	.+14     	; 0x368 <vfprintf+0x4c>
 35a:	93 fd       	sbrc	r25, 3
 35c:	85 91       	lpm	r24, Z+
 35e:	93 ff       	sbrs	r25, 3
 360:	81 91       	ld	r24, Z+
 362:	7f 01       	movw	r14, r30
 364:	85 32       	cpi	r24, 0x25	; 37
 366:	29 f4       	brne	.+10     	; 0x372 <vfprintf+0x56>
 368:	b6 01       	movw	r22, r12
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	0e 94 85 03 	call	0x70a	; 0x70a <fputc>
 370:	e7 cf       	rjmp	.-50     	; 0x340 <vfprintf+0x24>
 372:	91 2c       	mov	r9, r1
 374:	21 2c       	mov	r2, r1
 376:	31 2c       	mov	r3, r1
 378:	ff e1       	ldi	r31, 0x1F	; 31
 37a:	f3 15       	cp	r31, r3
 37c:	d8 f0       	brcs	.+54     	; 0x3b4 <vfprintf+0x98>
 37e:	8b 32       	cpi	r24, 0x2B	; 43
 380:	79 f0       	breq	.+30     	; 0x3a0 <vfprintf+0x84>
 382:	38 f4       	brcc	.+14     	; 0x392 <vfprintf+0x76>
 384:	80 32       	cpi	r24, 0x20	; 32
 386:	79 f0       	breq	.+30     	; 0x3a6 <vfprintf+0x8a>
 388:	83 32       	cpi	r24, 0x23	; 35
 38a:	a1 f4       	brne	.+40     	; 0x3b4 <vfprintf+0x98>
 38c:	23 2d       	mov	r18, r3
 38e:	20 61       	ori	r18, 0x10	; 16
 390:	1d c0       	rjmp	.+58     	; 0x3cc <vfprintf+0xb0>
 392:	8d 32       	cpi	r24, 0x2D	; 45
 394:	61 f0       	breq	.+24     	; 0x3ae <vfprintf+0x92>
 396:	80 33       	cpi	r24, 0x30	; 48
 398:	69 f4       	brne	.+26     	; 0x3b4 <vfprintf+0x98>
 39a:	23 2d       	mov	r18, r3
 39c:	21 60       	ori	r18, 0x01	; 1
 39e:	16 c0       	rjmp	.+44     	; 0x3cc <vfprintf+0xb0>
 3a0:	83 2d       	mov	r24, r3
 3a2:	82 60       	ori	r24, 0x02	; 2
 3a4:	38 2e       	mov	r3, r24
 3a6:	e3 2d       	mov	r30, r3
 3a8:	e4 60       	ori	r30, 0x04	; 4
 3aa:	3e 2e       	mov	r3, r30
 3ac:	2a c0       	rjmp	.+84     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3ae:	f3 2d       	mov	r31, r3
 3b0:	f8 60       	ori	r31, 0x08	; 8
 3b2:	1d c0       	rjmp	.+58     	; 0x3ee <vfprintf+0xd2>
 3b4:	37 fc       	sbrc	r3, 7
 3b6:	2d c0       	rjmp	.+90     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 3b8:	20 ed       	ldi	r18, 0xD0	; 208
 3ba:	28 0f       	add	r18, r24
 3bc:	2a 30       	cpi	r18, 0x0A	; 10
 3be:	40 f0       	brcs	.+16     	; 0x3d0 <vfprintf+0xb4>
 3c0:	8e 32       	cpi	r24, 0x2E	; 46
 3c2:	b9 f4       	brne	.+46     	; 0x3f2 <vfprintf+0xd6>
 3c4:	36 fc       	sbrc	r3, 6
 3c6:	81 c1       	rjmp	.+770    	; 0x6ca <__EEPROM_REGION_LENGTH__+0x2ca>
 3c8:	23 2d       	mov	r18, r3
 3ca:	20 64       	ori	r18, 0x40	; 64
 3cc:	32 2e       	mov	r3, r18
 3ce:	19 c0       	rjmp	.+50     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3d0:	36 fe       	sbrs	r3, 6
 3d2:	06 c0       	rjmp	.+12     	; 0x3e0 <vfprintf+0xc4>
 3d4:	8a e0       	ldi	r24, 0x0A	; 10
 3d6:	98 9e       	mul	r9, r24
 3d8:	20 0d       	add	r18, r0
 3da:	11 24       	eor	r1, r1
 3dc:	92 2e       	mov	r9, r18
 3de:	11 c0       	rjmp	.+34     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3e0:	ea e0       	ldi	r30, 0x0A	; 10
 3e2:	2e 9e       	mul	r2, r30
 3e4:	20 0d       	add	r18, r0
 3e6:	11 24       	eor	r1, r1
 3e8:	22 2e       	mov	r2, r18
 3ea:	f3 2d       	mov	r31, r3
 3ec:	f0 62       	ori	r31, 0x20	; 32
 3ee:	3f 2e       	mov	r3, r31
 3f0:	08 c0       	rjmp	.+16     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3f2:	8c 36       	cpi	r24, 0x6C	; 108
 3f4:	21 f4       	brne	.+8      	; 0x3fe <vfprintf+0xe2>
 3f6:	83 2d       	mov	r24, r3
 3f8:	80 68       	ori	r24, 0x80	; 128
 3fa:	38 2e       	mov	r3, r24
 3fc:	02 c0       	rjmp	.+4      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3fe:	88 36       	cpi	r24, 0x68	; 104
 400:	41 f4       	brne	.+16     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 402:	f7 01       	movw	r30, r14
 404:	93 fd       	sbrc	r25, 3
 406:	85 91       	lpm	r24, Z+
 408:	93 ff       	sbrs	r25, 3
 40a:	81 91       	ld	r24, Z+
 40c:	7f 01       	movw	r14, r30
 40e:	81 11       	cpse	r24, r1
 410:	b3 cf       	rjmp	.-154    	; 0x378 <vfprintf+0x5c>
 412:	98 2f       	mov	r25, r24
 414:	9f 7d       	andi	r25, 0xDF	; 223
 416:	95 54       	subi	r25, 0x45	; 69
 418:	93 30       	cpi	r25, 0x03	; 3
 41a:	28 f4       	brcc	.+10     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 41c:	0c 5f       	subi	r16, 0xFC	; 252
 41e:	1f 4f       	sbci	r17, 0xFF	; 255
 420:	9f e3       	ldi	r25, 0x3F	; 63
 422:	99 83       	std	Y+1, r25	; 0x01
 424:	0d c0       	rjmp	.+26     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 426:	83 36       	cpi	r24, 0x63	; 99
 428:	31 f0       	breq	.+12     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 42a:	83 37       	cpi	r24, 0x73	; 115
 42c:	71 f0       	breq	.+28     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 42e:	83 35       	cpi	r24, 0x53	; 83
 430:	09 f0       	breq	.+2      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 432:	59 c0       	rjmp	.+178    	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
 434:	21 c0       	rjmp	.+66     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 436:	f8 01       	movw	r30, r16
 438:	80 81       	ld	r24, Z
 43a:	89 83       	std	Y+1, r24	; 0x01
 43c:	0e 5f       	subi	r16, 0xFE	; 254
 43e:	1f 4f       	sbci	r17, 0xFF	; 255
 440:	88 24       	eor	r8, r8
 442:	83 94       	inc	r8
 444:	91 2c       	mov	r9, r1
 446:	53 01       	movw	r10, r6
 448:	13 c0       	rjmp	.+38     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 44a:	28 01       	movw	r4, r16
 44c:	f2 e0       	ldi	r31, 0x02	; 2
 44e:	4f 0e       	add	r4, r31
 450:	51 1c       	adc	r5, r1
 452:	f8 01       	movw	r30, r16
 454:	a0 80       	ld	r10, Z
 456:	b1 80       	ldd	r11, Z+1	; 0x01
 458:	36 fe       	sbrs	r3, 6
 45a:	03 c0       	rjmp	.+6      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 45c:	69 2d       	mov	r22, r9
 45e:	70 e0       	ldi	r23, 0x00	; 0
 460:	02 c0       	rjmp	.+4      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 462:	6f ef       	ldi	r22, 0xFF	; 255
 464:	7f ef       	ldi	r23, 0xFF	; 255
 466:	c5 01       	movw	r24, r10
 468:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <strnlen>
 46c:	4c 01       	movw	r8, r24
 46e:	82 01       	movw	r16, r4
 470:	f3 2d       	mov	r31, r3
 472:	ff 77       	andi	r31, 0x7F	; 127
 474:	3f 2e       	mov	r3, r31
 476:	16 c0       	rjmp	.+44     	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
 478:	28 01       	movw	r4, r16
 47a:	22 e0       	ldi	r18, 0x02	; 2
 47c:	42 0e       	add	r4, r18
 47e:	51 1c       	adc	r5, r1
 480:	f8 01       	movw	r30, r16
 482:	a0 80       	ld	r10, Z
 484:	b1 80       	ldd	r11, Z+1	; 0x01
 486:	36 fe       	sbrs	r3, 6
 488:	03 c0       	rjmp	.+6      	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 48a:	69 2d       	mov	r22, r9
 48c:	70 e0       	ldi	r23, 0x00	; 0
 48e:	02 c0       	rjmp	.+4      	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
 490:	6f ef       	ldi	r22, 0xFF	; 255
 492:	7f ef       	ldi	r23, 0xFF	; 255
 494:	c5 01       	movw	r24, r10
 496:	0e 94 6f 03 	call	0x6de	; 0x6de <strnlen_P>
 49a:	4c 01       	movw	r8, r24
 49c:	f3 2d       	mov	r31, r3
 49e:	f0 68       	ori	r31, 0x80	; 128
 4a0:	3f 2e       	mov	r3, r31
 4a2:	82 01       	movw	r16, r4
 4a4:	33 fc       	sbrc	r3, 3
 4a6:	1b c0       	rjmp	.+54     	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
 4a8:	82 2d       	mov	r24, r2
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	88 16       	cp	r8, r24
 4ae:	99 06       	cpc	r9, r25
 4b0:	b0 f4       	brcc	.+44     	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
 4b2:	b6 01       	movw	r22, r12
 4b4:	80 e2       	ldi	r24, 0x20	; 32
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	0e 94 85 03 	call	0x70a	; 0x70a <fputc>
 4bc:	2a 94       	dec	r2
 4be:	f4 cf       	rjmp	.-24     	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
 4c0:	f5 01       	movw	r30, r10
 4c2:	37 fc       	sbrc	r3, 7
 4c4:	85 91       	lpm	r24, Z+
 4c6:	37 fe       	sbrs	r3, 7
 4c8:	81 91       	ld	r24, Z+
 4ca:	5f 01       	movw	r10, r30
 4cc:	b6 01       	movw	r22, r12
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	0e 94 85 03 	call	0x70a	; 0x70a <fputc>
 4d4:	21 10       	cpse	r2, r1
 4d6:	2a 94       	dec	r2
 4d8:	21 e0       	ldi	r18, 0x01	; 1
 4da:	82 1a       	sub	r8, r18
 4dc:	91 08       	sbc	r9, r1
 4de:	81 14       	cp	r8, r1
 4e0:	91 04       	cpc	r9, r1
 4e2:	71 f7       	brne	.-36     	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 4e4:	e8 c0       	rjmp	.+464    	; 0x6b6 <__EEPROM_REGION_LENGTH__+0x2b6>
 4e6:	84 36       	cpi	r24, 0x64	; 100
 4e8:	11 f0       	breq	.+4      	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
 4ea:	89 36       	cpi	r24, 0x69	; 105
 4ec:	41 f5       	brne	.+80     	; 0x53e <__EEPROM_REGION_LENGTH__+0x13e>
 4ee:	f8 01       	movw	r30, r16
 4f0:	37 fe       	sbrs	r3, 7
 4f2:	07 c0       	rjmp	.+14     	; 0x502 <__EEPROM_REGION_LENGTH__+0x102>
 4f4:	60 81       	ld	r22, Z
 4f6:	71 81       	ldd	r23, Z+1	; 0x01
 4f8:	82 81       	ldd	r24, Z+2	; 0x02
 4fa:	93 81       	ldd	r25, Z+3	; 0x03
 4fc:	0c 5f       	subi	r16, 0xFC	; 252
 4fe:	1f 4f       	sbci	r17, 0xFF	; 255
 500:	08 c0       	rjmp	.+16     	; 0x512 <__EEPROM_REGION_LENGTH__+0x112>
 502:	60 81       	ld	r22, Z
 504:	71 81       	ldd	r23, Z+1	; 0x01
 506:	07 2e       	mov	r0, r23
 508:	00 0c       	add	r0, r0
 50a:	88 0b       	sbc	r24, r24
 50c:	99 0b       	sbc	r25, r25
 50e:	0e 5f       	subi	r16, 0xFE	; 254
 510:	1f 4f       	sbci	r17, 0xFF	; 255
 512:	f3 2d       	mov	r31, r3
 514:	ff 76       	andi	r31, 0x6F	; 111
 516:	3f 2e       	mov	r3, r31
 518:	97 ff       	sbrs	r25, 7
 51a:	09 c0       	rjmp	.+18     	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
 51c:	90 95       	com	r25
 51e:	80 95       	com	r24
 520:	70 95       	com	r23
 522:	61 95       	neg	r22
 524:	7f 4f       	sbci	r23, 0xFF	; 255
 526:	8f 4f       	sbci	r24, 0xFF	; 255
 528:	9f 4f       	sbci	r25, 0xFF	; 255
 52a:	f0 68       	ori	r31, 0x80	; 128
 52c:	3f 2e       	mov	r3, r31
 52e:	2a e0       	ldi	r18, 0x0A	; 10
 530:	30 e0       	ldi	r19, 0x00	; 0
 532:	a3 01       	movw	r20, r6
 534:	0e 94 c1 03 	call	0x782	; 0x782 <__ultoa_invert>
 538:	88 2e       	mov	r8, r24
 53a:	86 18       	sub	r8, r6
 53c:	45 c0       	rjmp	.+138    	; 0x5c8 <__EEPROM_REGION_LENGTH__+0x1c8>
 53e:	85 37       	cpi	r24, 0x75	; 117
 540:	31 f4       	brne	.+12     	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
 542:	23 2d       	mov	r18, r3
 544:	2f 7e       	andi	r18, 0xEF	; 239
 546:	b2 2e       	mov	r11, r18
 548:	2a e0       	ldi	r18, 0x0A	; 10
 54a:	30 e0       	ldi	r19, 0x00	; 0
 54c:	25 c0       	rjmp	.+74     	; 0x598 <__EEPROM_REGION_LENGTH__+0x198>
 54e:	93 2d       	mov	r25, r3
 550:	99 7f       	andi	r25, 0xF9	; 249
 552:	b9 2e       	mov	r11, r25
 554:	8f 36       	cpi	r24, 0x6F	; 111
 556:	c1 f0       	breq	.+48     	; 0x588 <__EEPROM_REGION_LENGTH__+0x188>
 558:	18 f4       	brcc	.+6      	; 0x560 <__EEPROM_REGION_LENGTH__+0x160>
 55a:	88 35       	cpi	r24, 0x58	; 88
 55c:	79 f0       	breq	.+30     	; 0x57c <__EEPROM_REGION_LENGTH__+0x17c>
 55e:	b5 c0       	rjmp	.+362    	; 0x6ca <__EEPROM_REGION_LENGTH__+0x2ca>
 560:	80 37       	cpi	r24, 0x70	; 112
 562:	19 f0       	breq	.+6      	; 0x56a <__EEPROM_REGION_LENGTH__+0x16a>
 564:	88 37       	cpi	r24, 0x78	; 120
 566:	21 f0       	breq	.+8      	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
 568:	b0 c0       	rjmp	.+352    	; 0x6ca <__EEPROM_REGION_LENGTH__+0x2ca>
 56a:	e9 2f       	mov	r30, r25
 56c:	e0 61       	ori	r30, 0x10	; 16
 56e:	be 2e       	mov	r11, r30
 570:	b4 fe       	sbrs	r11, 4
 572:	0d c0       	rjmp	.+26     	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 574:	fb 2d       	mov	r31, r11
 576:	f4 60       	ori	r31, 0x04	; 4
 578:	bf 2e       	mov	r11, r31
 57a:	09 c0       	rjmp	.+18     	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 57c:	34 fe       	sbrs	r3, 4
 57e:	0a c0       	rjmp	.+20     	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
 580:	29 2f       	mov	r18, r25
 582:	26 60       	ori	r18, 0x06	; 6
 584:	b2 2e       	mov	r11, r18
 586:	06 c0       	rjmp	.+12     	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
 588:	28 e0       	ldi	r18, 0x08	; 8
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	05 c0       	rjmp	.+10     	; 0x598 <__EEPROM_REGION_LENGTH__+0x198>
 58e:	20 e1       	ldi	r18, 0x10	; 16
 590:	30 e0       	ldi	r19, 0x00	; 0
 592:	02 c0       	rjmp	.+4      	; 0x598 <__EEPROM_REGION_LENGTH__+0x198>
 594:	20 e1       	ldi	r18, 0x10	; 16
 596:	32 e0       	ldi	r19, 0x02	; 2
 598:	f8 01       	movw	r30, r16
 59a:	b7 fe       	sbrs	r11, 7
 59c:	07 c0       	rjmp	.+14     	; 0x5ac <__EEPROM_REGION_LENGTH__+0x1ac>
 59e:	60 81       	ld	r22, Z
 5a0:	71 81       	ldd	r23, Z+1	; 0x01
 5a2:	82 81       	ldd	r24, Z+2	; 0x02
 5a4:	93 81       	ldd	r25, Z+3	; 0x03
 5a6:	0c 5f       	subi	r16, 0xFC	; 252
 5a8:	1f 4f       	sbci	r17, 0xFF	; 255
 5aa:	06 c0       	rjmp	.+12     	; 0x5b8 <__EEPROM_REGION_LENGTH__+0x1b8>
 5ac:	60 81       	ld	r22, Z
 5ae:	71 81       	ldd	r23, Z+1	; 0x01
 5b0:	80 e0       	ldi	r24, 0x00	; 0
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	0e 5f       	subi	r16, 0xFE	; 254
 5b6:	1f 4f       	sbci	r17, 0xFF	; 255
 5b8:	a3 01       	movw	r20, r6
 5ba:	0e 94 c1 03 	call	0x782	; 0x782 <__ultoa_invert>
 5be:	88 2e       	mov	r8, r24
 5c0:	86 18       	sub	r8, r6
 5c2:	fb 2d       	mov	r31, r11
 5c4:	ff 77       	andi	r31, 0x7F	; 127
 5c6:	3f 2e       	mov	r3, r31
 5c8:	36 fe       	sbrs	r3, 6
 5ca:	0d c0       	rjmp	.+26     	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
 5cc:	23 2d       	mov	r18, r3
 5ce:	2e 7f       	andi	r18, 0xFE	; 254
 5d0:	a2 2e       	mov	r10, r18
 5d2:	89 14       	cp	r8, r9
 5d4:	58 f4       	brcc	.+22     	; 0x5ec <__EEPROM_REGION_LENGTH__+0x1ec>
 5d6:	34 fe       	sbrs	r3, 4
 5d8:	0b c0       	rjmp	.+22     	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
 5da:	32 fc       	sbrc	r3, 2
 5dc:	09 c0       	rjmp	.+18     	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
 5de:	83 2d       	mov	r24, r3
 5e0:	8e 7e       	andi	r24, 0xEE	; 238
 5e2:	a8 2e       	mov	r10, r24
 5e4:	05 c0       	rjmp	.+10     	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
 5e6:	b8 2c       	mov	r11, r8
 5e8:	a3 2c       	mov	r10, r3
 5ea:	03 c0       	rjmp	.+6      	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
 5ec:	b8 2c       	mov	r11, r8
 5ee:	01 c0       	rjmp	.+2      	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
 5f0:	b9 2c       	mov	r11, r9
 5f2:	a4 fe       	sbrs	r10, 4
 5f4:	0f c0       	rjmp	.+30     	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
 5f6:	fe 01       	movw	r30, r28
 5f8:	e8 0d       	add	r30, r8
 5fa:	f1 1d       	adc	r31, r1
 5fc:	80 81       	ld	r24, Z
 5fe:	80 33       	cpi	r24, 0x30	; 48
 600:	21 f4       	brne	.+8      	; 0x60a <__EEPROM_REGION_LENGTH__+0x20a>
 602:	9a 2d       	mov	r25, r10
 604:	99 7e       	andi	r25, 0xE9	; 233
 606:	a9 2e       	mov	r10, r25
 608:	09 c0       	rjmp	.+18     	; 0x61c <__EEPROM_REGION_LENGTH__+0x21c>
 60a:	a2 fe       	sbrs	r10, 2
 60c:	06 c0       	rjmp	.+12     	; 0x61a <__EEPROM_REGION_LENGTH__+0x21a>
 60e:	b3 94       	inc	r11
 610:	b3 94       	inc	r11
 612:	04 c0       	rjmp	.+8      	; 0x61c <__EEPROM_REGION_LENGTH__+0x21c>
 614:	8a 2d       	mov	r24, r10
 616:	86 78       	andi	r24, 0x86	; 134
 618:	09 f0       	breq	.+2      	; 0x61c <__EEPROM_REGION_LENGTH__+0x21c>
 61a:	b3 94       	inc	r11
 61c:	a3 fc       	sbrc	r10, 3
 61e:	11 c0       	rjmp	.+34     	; 0x642 <__EEPROM_REGION_LENGTH__+0x242>
 620:	a0 fe       	sbrs	r10, 0
 622:	06 c0       	rjmp	.+12     	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
 624:	b2 14       	cp	r11, r2
 626:	88 f4       	brcc	.+34     	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
 628:	28 0c       	add	r2, r8
 62a:	92 2c       	mov	r9, r2
 62c:	9b 18       	sub	r9, r11
 62e:	0e c0       	rjmp	.+28     	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
 630:	b2 14       	cp	r11, r2
 632:	60 f4       	brcc	.+24     	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
 634:	b6 01       	movw	r22, r12
 636:	80 e2       	ldi	r24, 0x20	; 32
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	0e 94 85 03 	call	0x70a	; 0x70a <fputc>
 63e:	b3 94       	inc	r11
 640:	f7 cf       	rjmp	.-18     	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
 642:	b2 14       	cp	r11, r2
 644:	18 f4       	brcc	.+6      	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
 646:	2b 18       	sub	r2, r11
 648:	02 c0       	rjmp	.+4      	; 0x64e <__EEPROM_REGION_LENGTH__+0x24e>
 64a:	98 2c       	mov	r9, r8
 64c:	21 2c       	mov	r2, r1
 64e:	a4 fe       	sbrs	r10, 4
 650:	10 c0       	rjmp	.+32     	; 0x672 <__EEPROM_REGION_LENGTH__+0x272>
 652:	b6 01       	movw	r22, r12
 654:	80 e3       	ldi	r24, 0x30	; 48
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	0e 94 85 03 	call	0x70a	; 0x70a <fputc>
 65c:	a2 fe       	sbrs	r10, 2
 65e:	17 c0       	rjmp	.+46     	; 0x68e <__EEPROM_REGION_LENGTH__+0x28e>
 660:	a1 fc       	sbrc	r10, 1
 662:	03 c0       	rjmp	.+6      	; 0x66a <__EEPROM_REGION_LENGTH__+0x26a>
 664:	88 e7       	ldi	r24, 0x78	; 120
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	02 c0       	rjmp	.+4      	; 0x66e <__EEPROM_REGION_LENGTH__+0x26e>
 66a:	88 e5       	ldi	r24, 0x58	; 88
 66c:	90 e0       	ldi	r25, 0x00	; 0
 66e:	b6 01       	movw	r22, r12
 670:	0c c0       	rjmp	.+24     	; 0x68a <__EEPROM_REGION_LENGTH__+0x28a>
 672:	8a 2d       	mov	r24, r10
 674:	86 78       	andi	r24, 0x86	; 134
 676:	59 f0       	breq	.+22     	; 0x68e <__EEPROM_REGION_LENGTH__+0x28e>
 678:	a1 fe       	sbrs	r10, 1
 67a:	02 c0       	rjmp	.+4      	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
 67c:	8b e2       	ldi	r24, 0x2B	; 43
 67e:	01 c0       	rjmp	.+2      	; 0x682 <__EEPROM_REGION_LENGTH__+0x282>
 680:	80 e2       	ldi	r24, 0x20	; 32
 682:	a7 fc       	sbrc	r10, 7
 684:	8d e2       	ldi	r24, 0x2D	; 45
 686:	b6 01       	movw	r22, r12
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	0e 94 85 03 	call	0x70a	; 0x70a <fputc>
 68e:	89 14       	cp	r8, r9
 690:	38 f4       	brcc	.+14     	; 0x6a0 <__EEPROM_REGION_LENGTH__+0x2a0>
 692:	b6 01       	movw	r22, r12
 694:	80 e3       	ldi	r24, 0x30	; 48
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	0e 94 85 03 	call	0x70a	; 0x70a <fputc>
 69c:	9a 94       	dec	r9
 69e:	f7 cf       	rjmp	.-18     	; 0x68e <__EEPROM_REGION_LENGTH__+0x28e>
 6a0:	8a 94       	dec	r8
 6a2:	f3 01       	movw	r30, r6
 6a4:	e8 0d       	add	r30, r8
 6a6:	f1 1d       	adc	r31, r1
 6a8:	80 81       	ld	r24, Z
 6aa:	b6 01       	movw	r22, r12
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	0e 94 85 03 	call	0x70a	; 0x70a <fputc>
 6b2:	81 10       	cpse	r8, r1
 6b4:	f5 cf       	rjmp	.-22     	; 0x6a0 <__EEPROM_REGION_LENGTH__+0x2a0>
 6b6:	22 20       	and	r2, r2
 6b8:	09 f4       	brne	.+2      	; 0x6bc <__EEPROM_REGION_LENGTH__+0x2bc>
 6ba:	42 ce       	rjmp	.-892    	; 0x340 <vfprintf+0x24>
 6bc:	b6 01       	movw	r22, r12
 6be:	80 e2       	ldi	r24, 0x20	; 32
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	0e 94 85 03 	call	0x70a	; 0x70a <fputc>
 6c6:	2a 94       	dec	r2
 6c8:	f6 cf       	rjmp	.-20     	; 0x6b6 <__EEPROM_REGION_LENGTH__+0x2b6>
 6ca:	f6 01       	movw	r30, r12
 6cc:	86 81       	ldd	r24, Z+6	; 0x06
 6ce:	97 81       	ldd	r25, Z+7	; 0x07
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <__EEPROM_REGION_LENGTH__+0x2d6>
 6d2:	8f ef       	ldi	r24, 0xFF	; 255
 6d4:	9f ef       	ldi	r25, 0xFF	; 255
 6d6:	2b 96       	adiw	r28, 0x0b	; 11
 6d8:	e2 e1       	ldi	r30, 0x12	; 18
 6da:	0c 94 3b 04 	jmp	0x876	; 0x876 <__epilogue_restores__>

000006de <strnlen_P>:
 6de:	fc 01       	movw	r30, r24
 6e0:	05 90       	lpm	r0, Z+
 6e2:	61 50       	subi	r22, 0x01	; 1
 6e4:	70 40       	sbci	r23, 0x00	; 0
 6e6:	01 10       	cpse	r0, r1
 6e8:	d8 f7       	brcc	.-10     	; 0x6e0 <strnlen_P+0x2>
 6ea:	80 95       	com	r24
 6ec:	90 95       	com	r25
 6ee:	8e 0f       	add	r24, r30
 6f0:	9f 1f       	adc	r25, r31
 6f2:	08 95       	ret

000006f4 <strnlen>:
 6f4:	fc 01       	movw	r30, r24
 6f6:	61 50       	subi	r22, 0x01	; 1
 6f8:	70 40       	sbci	r23, 0x00	; 0
 6fa:	01 90       	ld	r0, Z+
 6fc:	01 10       	cpse	r0, r1
 6fe:	d8 f7       	brcc	.-10     	; 0x6f6 <strnlen+0x2>
 700:	80 95       	com	r24
 702:	90 95       	com	r25
 704:	8e 0f       	add	r24, r30
 706:	9f 1f       	adc	r25, r31
 708:	08 95       	ret

0000070a <fputc>:
 70a:	0f 93       	push	r16
 70c:	1f 93       	push	r17
 70e:	cf 93       	push	r28
 710:	df 93       	push	r29
 712:	fb 01       	movw	r30, r22
 714:	23 81       	ldd	r18, Z+3	; 0x03
 716:	21 fd       	sbrc	r18, 1
 718:	03 c0       	rjmp	.+6      	; 0x720 <fputc+0x16>
 71a:	8f ef       	ldi	r24, 0xFF	; 255
 71c:	9f ef       	ldi	r25, 0xFF	; 255
 71e:	2c c0       	rjmp	.+88     	; 0x778 <fputc+0x6e>
 720:	22 ff       	sbrs	r18, 2
 722:	16 c0       	rjmp	.+44     	; 0x750 <fputc+0x46>
 724:	46 81       	ldd	r20, Z+6	; 0x06
 726:	57 81       	ldd	r21, Z+7	; 0x07
 728:	24 81       	ldd	r18, Z+4	; 0x04
 72a:	35 81       	ldd	r19, Z+5	; 0x05
 72c:	42 17       	cp	r20, r18
 72e:	53 07       	cpc	r21, r19
 730:	44 f4       	brge	.+16     	; 0x742 <fputc+0x38>
 732:	a0 81       	ld	r26, Z
 734:	b1 81       	ldd	r27, Z+1	; 0x01
 736:	9d 01       	movw	r18, r26
 738:	2f 5f       	subi	r18, 0xFF	; 255
 73a:	3f 4f       	sbci	r19, 0xFF	; 255
 73c:	31 83       	std	Z+1, r19	; 0x01
 73e:	20 83       	st	Z, r18
 740:	8c 93       	st	X, r24
 742:	26 81       	ldd	r18, Z+6	; 0x06
 744:	37 81       	ldd	r19, Z+7	; 0x07
 746:	2f 5f       	subi	r18, 0xFF	; 255
 748:	3f 4f       	sbci	r19, 0xFF	; 255
 74a:	37 83       	std	Z+7, r19	; 0x07
 74c:	26 83       	std	Z+6, r18	; 0x06
 74e:	14 c0       	rjmp	.+40     	; 0x778 <fputc+0x6e>
 750:	8b 01       	movw	r16, r22
 752:	ec 01       	movw	r28, r24
 754:	fb 01       	movw	r30, r22
 756:	00 84       	ldd	r0, Z+8	; 0x08
 758:	f1 85       	ldd	r31, Z+9	; 0x09
 75a:	e0 2d       	mov	r30, r0
 75c:	09 95       	icall
 75e:	89 2b       	or	r24, r25
 760:	e1 f6       	brne	.-72     	; 0x71a <fputc+0x10>
 762:	d8 01       	movw	r26, r16
 764:	16 96       	adiw	r26, 0x06	; 6
 766:	8d 91       	ld	r24, X+
 768:	9c 91       	ld	r25, X
 76a:	17 97       	sbiw	r26, 0x07	; 7
 76c:	01 96       	adiw	r24, 0x01	; 1
 76e:	17 96       	adiw	r26, 0x07	; 7
 770:	9c 93       	st	X, r25
 772:	8e 93       	st	-X, r24
 774:	16 97       	sbiw	r26, 0x06	; 6
 776:	ce 01       	movw	r24, r28
 778:	df 91       	pop	r29
 77a:	cf 91       	pop	r28
 77c:	1f 91       	pop	r17
 77e:	0f 91       	pop	r16
 780:	08 95       	ret

00000782 <__ultoa_invert>:
 782:	fa 01       	movw	r30, r20
 784:	aa 27       	eor	r26, r26
 786:	28 30       	cpi	r18, 0x08	; 8
 788:	51 f1       	breq	.+84     	; 0x7de <__ultoa_invert+0x5c>
 78a:	20 31       	cpi	r18, 0x10	; 16
 78c:	81 f1       	breq	.+96     	; 0x7ee <__ultoa_invert+0x6c>
 78e:	e8 94       	clt
 790:	6f 93       	push	r22
 792:	6e 7f       	andi	r22, 0xFE	; 254
 794:	6e 5f       	subi	r22, 0xFE	; 254
 796:	7f 4f       	sbci	r23, 0xFF	; 255
 798:	8f 4f       	sbci	r24, 0xFF	; 255
 79a:	9f 4f       	sbci	r25, 0xFF	; 255
 79c:	af 4f       	sbci	r26, 0xFF	; 255
 79e:	b1 e0       	ldi	r27, 0x01	; 1
 7a0:	3e d0       	rcall	.+124    	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 7a2:	b4 e0       	ldi	r27, 0x04	; 4
 7a4:	3c d0       	rcall	.+120    	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 7a6:	67 0f       	add	r22, r23
 7a8:	78 1f       	adc	r23, r24
 7aa:	89 1f       	adc	r24, r25
 7ac:	9a 1f       	adc	r25, r26
 7ae:	a1 1d       	adc	r26, r1
 7b0:	68 0f       	add	r22, r24
 7b2:	79 1f       	adc	r23, r25
 7b4:	8a 1f       	adc	r24, r26
 7b6:	91 1d       	adc	r25, r1
 7b8:	a1 1d       	adc	r26, r1
 7ba:	6a 0f       	add	r22, r26
 7bc:	71 1d       	adc	r23, r1
 7be:	81 1d       	adc	r24, r1
 7c0:	91 1d       	adc	r25, r1
 7c2:	a1 1d       	adc	r26, r1
 7c4:	20 d0       	rcall	.+64     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7c6:	09 f4       	brne	.+2      	; 0x7ca <__ultoa_invert+0x48>
 7c8:	68 94       	set
 7ca:	3f 91       	pop	r19
 7cc:	2a e0       	ldi	r18, 0x0A	; 10
 7ce:	26 9f       	mul	r18, r22
 7d0:	11 24       	eor	r1, r1
 7d2:	30 19       	sub	r19, r0
 7d4:	30 5d       	subi	r19, 0xD0	; 208
 7d6:	31 93       	st	Z+, r19
 7d8:	de f6       	brtc	.-74     	; 0x790 <__ultoa_invert+0xe>
 7da:	cf 01       	movw	r24, r30
 7dc:	08 95       	ret
 7de:	46 2f       	mov	r20, r22
 7e0:	47 70       	andi	r20, 0x07	; 7
 7e2:	40 5d       	subi	r20, 0xD0	; 208
 7e4:	41 93       	st	Z+, r20
 7e6:	b3 e0       	ldi	r27, 0x03	; 3
 7e8:	0f d0       	rcall	.+30     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 7ea:	c9 f7       	brne	.-14     	; 0x7de <__ultoa_invert+0x5c>
 7ec:	f6 cf       	rjmp	.-20     	; 0x7da <__ultoa_invert+0x58>
 7ee:	46 2f       	mov	r20, r22
 7f0:	4f 70       	andi	r20, 0x0F	; 15
 7f2:	40 5d       	subi	r20, 0xD0	; 208
 7f4:	4a 33       	cpi	r20, 0x3A	; 58
 7f6:	18 f0       	brcs	.+6      	; 0x7fe <__ultoa_invert+0x7c>
 7f8:	49 5d       	subi	r20, 0xD9	; 217
 7fa:	31 fd       	sbrc	r19, 1
 7fc:	40 52       	subi	r20, 0x20	; 32
 7fe:	41 93       	st	Z+, r20
 800:	02 d0       	rcall	.+4      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 802:	a9 f7       	brne	.-22     	; 0x7ee <__ultoa_invert+0x6c>
 804:	ea cf       	rjmp	.-44     	; 0x7da <__ultoa_invert+0x58>
 806:	b4 e0       	ldi	r27, 0x04	; 4
 808:	a6 95       	lsr	r26
 80a:	97 95       	ror	r25
 80c:	87 95       	ror	r24
 80e:	77 95       	ror	r23
 810:	67 95       	ror	r22
 812:	ba 95       	dec	r27
 814:	c9 f7       	brne	.-14     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 816:	00 97       	sbiw	r24, 0x00	; 0
 818:	61 05       	cpc	r22, r1
 81a:	71 05       	cpc	r23, r1
 81c:	08 95       	ret
 81e:	9b 01       	movw	r18, r22
 820:	ac 01       	movw	r20, r24
 822:	0a 2e       	mov	r0, r26
 824:	06 94       	lsr	r0
 826:	57 95       	ror	r21
 828:	47 95       	ror	r20
 82a:	37 95       	ror	r19
 82c:	27 95       	ror	r18
 82e:	ba 95       	dec	r27
 830:	c9 f7       	brne	.-14     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 832:	62 0f       	add	r22, r18
 834:	73 1f       	adc	r23, r19
 836:	84 1f       	adc	r24, r20
 838:	95 1f       	adc	r25, r21
 83a:	a0 1d       	adc	r26, r0
 83c:	08 95       	ret

0000083e <__prologue_saves__>:
 83e:	2f 92       	push	r2
 840:	3f 92       	push	r3
 842:	4f 92       	push	r4
 844:	5f 92       	push	r5
 846:	6f 92       	push	r6
 848:	7f 92       	push	r7
 84a:	8f 92       	push	r8
 84c:	9f 92       	push	r9
 84e:	af 92       	push	r10
 850:	bf 92       	push	r11
 852:	cf 92       	push	r12
 854:	df 92       	push	r13
 856:	ef 92       	push	r14
 858:	ff 92       	push	r15
 85a:	0f 93       	push	r16
 85c:	1f 93       	push	r17
 85e:	cf 93       	push	r28
 860:	df 93       	push	r29
 862:	cd b7       	in	r28, 0x3d	; 61
 864:	de b7       	in	r29, 0x3e	; 62
 866:	ca 1b       	sub	r28, r26
 868:	db 0b       	sbc	r29, r27
 86a:	0f b6       	in	r0, 0x3f	; 63
 86c:	f8 94       	cli
 86e:	de bf       	out	0x3e, r29	; 62
 870:	0f be       	out	0x3f, r0	; 63
 872:	cd bf       	out	0x3d, r28	; 61
 874:	09 94       	ijmp

00000876 <__epilogue_restores__>:
 876:	2a 88       	ldd	r2, Y+18	; 0x12
 878:	39 88       	ldd	r3, Y+17	; 0x11
 87a:	48 88       	ldd	r4, Y+16	; 0x10
 87c:	5f 84       	ldd	r5, Y+15	; 0x0f
 87e:	6e 84       	ldd	r6, Y+14	; 0x0e
 880:	7d 84       	ldd	r7, Y+13	; 0x0d
 882:	8c 84       	ldd	r8, Y+12	; 0x0c
 884:	9b 84       	ldd	r9, Y+11	; 0x0b
 886:	aa 84       	ldd	r10, Y+10	; 0x0a
 888:	b9 84       	ldd	r11, Y+9	; 0x09
 88a:	c8 84       	ldd	r12, Y+8	; 0x08
 88c:	df 80       	ldd	r13, Y+7	; 0x07
 88e:	ee 80       	ldd	r14, Y+6	; 0x06
 890:	fd 80       	ldd	r15, Y+5	; 0x05
 892:	0c 81       	ldd	r16, Y+4	; 0x04
 894:	1b 81       	ldd	r17, Y+3	; 0x03
 896:	aa 81       	ldd	r26, Y+2	; 0x02
 898:	b9 81       	ldd	r27, Y+1	; 0x01
 89a:	ce 0f       	add	r28, r30
 89c:	d1 1d       	adc	r29, r1
 89e:	0f b6       	in	r0, 0x3f	; 63
 8a0:	f8 94       	cli
 8a2:	de bf       	out	0x3e, r29	; 62
 8a4:	0f be       	out	0x3f, r0	; 63
 8a6:	cd bf       	out	0x3d, r28	; 61
 8a8:	ed 01       	movw	r28, r26
 8aa:	08 95       	ret

000008ac <_exit>:
 8ac:	f8 94       	cli

000008ae <__stop_program>:
 8ae:	ff cf       	rjmp	.-2      	; 0x8ae <__stop_program>
